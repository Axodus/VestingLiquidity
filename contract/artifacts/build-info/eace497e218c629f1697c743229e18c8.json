{
	"id": "eace497e218c629f1697c743229e18c8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/VestingLiquidityHedgey_flattened.sol": {
				"content": "\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/security/Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n\n// File: contract/VestingLiquidityHedgey.sol\n\n\npragma solidity ^0.8.0;\n\n\n\n\n\ncontract LiquidityPoolInteractor is Ownable, ReentrancyGuard, Pausable {\n    address public liquidityPoolAddress;\n    IERC20 public wrappedToken;\n\n    uint256 public blockCounter;\n    uint256 public transferInterval = 200;\n    uint256 public maxAllowance;\n\n    event TokensDeposited(address indexed from, uint256 amount);\n    event ContractApproved(address indexed sender, uint256 amount);\n    event TokensWithdrawn(address indexed to, uint256 amount);\n    event MaxAllowanceChanged(uint256 newMaxAllowance);\n\n    constructor(address _liquidityPoolAddress, address _wrappedToken, uint256 _maxAllowance) {\n        require(_liquidityPoolAddress != address(0), \"Invalid Liquidity Pool address\");\n        require(_wrappedToken != address(0), \"Invalid wrapped token address\");\n\n        liquidityPoolAddress = _liquidityPoolAddress;\n        wrappedToken = IERC20(_wrappedToken);\n        maxAllowance = _maxAllowance;\n\n        // Initialize the block counter\n        blockCounter = block.number;\n    }\n\n    function depositAndTransfer(uint256 amount) external whenNotPaused {\n        require(amount > 0, \"Deposit amount must be greater than 0\");\n\n        // Ensure the sender has approved this contract to spend their wrapped tokens\n        require(wrappedToken.allowance(msg.sender, address(this)) >= amount, \"Not enough allowance\");\n\n        // Transfer tokens from sender to this contract\n        require(wrappedToken.transferFrom(msg.sender, address(this), amount), \"Transfer failed\");\n\n        // Check if the transfer interval has passed and execute transfer to the Liquidity Pool\n        if (block.number - blockCounter >= transferInterval) {\n            executeTransferToLiquidityPool();\n            // Reset the block counter\n            blockCounter = block.number;\n        }\n\n        emit TokensDeposited(msg.sender, amount);\n    }\n\n    function approveContract(uint256 amount) external onlyOwner whenNotPaused {\n        // Approve this contract to spend the specified amount of tokens\n        require(amount <= maxAllowance, \"Exceeds maximum allowance\");\n        wrappedToken.approve(address(this), amount);\n\n        emit ContractApproved(msg.sender, amount);\n    }\n\n    function withdrawal(address to, uint256 amount) external onlyOwner nonReentrant whenNotPaused {\n        require(to != address(0), \"Invalid withdrawal address\");\n        require(amount > 0, \"Withdrawal amount must be greater than 0\");\n        require(wrappedToken.balanceOf(address(this)) >= amount, \"Insufficient balance\");\n\n        // Transfer tokens from the contract to the specified address\n        require(wrappedToken.transfer(to, amount), \"Transfer failed\");\n\n        emit TokensWithdrawn(to, amount);\n    }\n\n    function transferOwnership(address newOwner) public override onlyOwner {\n        require(newOwner != address(0), \"New owner is the zero address\");\n        super.transferOwnership(newOwner);\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function automatedWithdrawalToPool() external whenNotPaused {\n        // Check if the transfer interval has passed and execute transfer to the Liquidity Pool\n        if (block.number - blockCounter >= transferInterval) {\n            executeTransferToLiquidityPool();\n            // Reset the block counter\n            blockCounter = block.number;\n        }\n    }\n\n    // Internal function to execute the transfer to the Liquidity Pool\n    function executeTransferToLiquidityPool() internal {\n        // Transfer total tokens from this contract to the Liquidity Pool address\n        uint256 contractBalance = wrappedToken.balanceOf(address(this));\n        if (contractBalance > 0) {\n            require(wrappedToken.transfer(liquidityPoolAddress, contractBalance), \"Transfer to Liquidity Pool failed\");\n        }\n    }\n\n    function setMaxAllowance(uint256 newMaxAllowance) external onlyOwner {\n        maxAllowance = newMaxAllowance;\n        emit MaxAllowanceChanged(newMaxAllowance);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contract/VestingLiquidityHedgey_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/VestingLiquidityHedgey_flattened.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/VestingLiquidityHedgey_flattened.sol\":{\"keccak256\":\"0x1a046e1d3939f099c14505045120c76bc1e56aa0698217457ab59f696b69d3bb\",\"urls\":[\"bzz-raw://ba9a4e4f44026c76f014d3d1f15947156cfe7809c563caa3403bf9242d8c0f78\",\"dweb:/ipfs/QmfLZMND3zNdDSnnNEv8ULsteBjDepGArMgpPeFc6jUeKf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/VestingLiquidityHedgey_flattened.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/VestingLiquidityHedgey_flattened.sol\":{\"keccak256\":\"0x1a046e1d3939f099c14505045120c76bc1e56aa0698217457ab59f696b69d3bb\",\"urls\":[\"bzz-raw://ba9a4e4f44026c76f014d3d1f15947156cfe7809c563caa3403bf9242d8c0f78\",\"dweb:/ipfs/QmfLZMND3zNdDSnnNEv8ULsteBjDepGArMgpPeFc6jUeKf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LiquidityPoolInteractor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_liquidityPoolAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_wrappedToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_maxAllowance",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ContractApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxAllowance",
									"type": "uint256"
								}
							],
							"name": "MaxAllowanceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approveContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "automatedWithdrawalToPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "blockCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositAndTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityPoolAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxAllowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMaxAllowance",
									"type": "uint256"
								}
							],
							"name": "setMaxAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wrappedToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/VestingLiquidityHedgey_flattened.sol\":12288:16315  contract LiquidityPoolInteractor is Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":12506:12509  200 */\n  0xc8\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":12472:12509  uint256 public transferInterval = 200 */\n  0x05\n  sstore\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":12802:13282  constructor(address _liquidityPoolAddress, address _wrappedToken, uint256 _maxAllowance) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":7714:7746  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":7733:7745  _msgSender() */\n  tag_10\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":7733:7743  _msgSender */\n  tag_11\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":7733:7745  _msgSender() */\n  jump\t// in\ntag_10:\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":7714:7732  _transferOwnership */\n  tag_12\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":7714:7746  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":1802:1803  1 */\n  0x01\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":1907:1929  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":5176:5183  _paused */\n  0x02\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":5176:5191  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":12909:12944  _liquidityPoolAddress != address(0) */\n  dup4\n  and\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":12901:12979  require(_liquidityPoolAddress != address(0), \"Invalid Liquidity Pool address\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":12997:13024  _wrappedToken != address(0) */\n  dup3\n  and\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":12989:13058  require(_wrappedToken != address(0), \"Invalid wrapped token address\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap1\n  tag_21\n  jump\t// in\ntag_19:\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":13069:13089  liquidityPoolAddress */\n  0x02\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":13069:13113  liquidityPoolAddress = _liquidityPoolAddress */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  and\n  0x0100\n  sub(shl(0xa0, 0x01), 0x01)\n  swap6\n  dup7\n  and\n  mul\n  or\n  swap1\n  sstore\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":13123:13135  wrappedToken */\n  0x03\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":13123:13159  wrappedToken = IERC20(_wrappedToken) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":13169:13181  maxAllowance */\n  0x06\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":13169:13197  maxAllowance = _maxAllowance */\n  sstore\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":13263:13275  block.number */\n  number\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":13248:13260  blockCounter */\n  0x04\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":13248:13275  blockCounter = block.number */\n  sstore\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":12288:16315  contract LiquidityPoolInteractor is Ownable, ReentrancyGuard, Pausable {... */\n  jump(tag_25)\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":3928:4024  function _msgSender() internal view virtual returns (address) {... */\ntag_11:\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":4007:4017  msg.sender */\n  caller\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":3928:4024  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":9204:9391  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":9277:9293  address oldOwner */\n  0x00\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":9296:9302  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":9312:9329  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":9344:9384  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":9296:9302  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":9344:9384  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":9277:9293  address oldOwner */\n  swap1\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":9344:9384  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":9204:9391  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:193   */\ntag_26:\n    /* \"#utility.yul\":95:108   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":137:168   */\n  dup2\n  and\n    /* \"#utility.yul\":127:169   */\n  dup2\n  eq\n    /* \"#utility.yul\":117:119   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":183:184   */\n  0x00\n    /* \"#utility.yul\":180:181   */\n  dup1\n    /* \"#utility.yul\":173:185   */\n  revert\n    /* \"#utility.yul\":117:119   */\ntag_28:\n    /* \"#utility.yul\":76:193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":198:566   */\ntag_3:\n  0x00\n  dup1\n  0x00\n    /* \"#utility.yul\":355:357   */\n  0x60\n    /* \"#utility.yul\":343:352   */\n  dup5\n    /* \"#utility.yul\":334:341   */\n  dup7\n    /* \"#utility.yul\":330:353   */\n  sub\n    /* \"#utility.yul\":326:358   */\n  slt\n    /* \"#utility.yul\":323:325   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":376:382   */\n  dup3\n    /* \"#utility.yul\":368:374   */\n  dup4\n    /* \"#utility.yul\":361:383   */\n  revert\n    /* \"#utility.yul\":323:325   */\ntag_30:\n    /* \"#utility.yul\":404:446   */\n  tag_31\n    /* \"#utility.yul\":436:445   */\n  dup5\n    /* \"#utility.yul\":404:446   */\n  tag_26\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":394:446   */\n  swap3\n  pop\n    /* \"#utility.yul\":465:516   */\n  tag_32\n    /* \"#utility.yul\":512:514   */\n  0x20\n    /* \"#utility.yul\":501:510   */\n  dup6\n    /* \"#utility.yul\":497:515   */\n  add\n    /* \"#utility.yul\":465:516   */\n  tag_26\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":455:516   */\n  swap2\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x40\n    /* \"#utility.yul\":545:554   */\n  dup5\n    /* \"#utility.yul\":541:559   */\n  add\n    /* \"#utility.yul\":535:560   */\n  mload\n    /* \"#utility.yul\":525:560   */\n  swap1\n  pop\n    /* \"#utility.yul\":313:566   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":571:924   */\ntag_21:\n    /* \"#utility.yul\":773:775   */\n  0x20\n    /* \"#utility.yul\":755:776   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":812:814   */\n  0x1d\n    /* \"#utility.yul\":792:810   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":785:815   */\n  mstore\n    /* \"#utility.yul\":851:882   */\n  0x496e76616c6964207772617070656420746f6b656e2061646472657373000000\n    /* \"#utility.yul\":846:848   */\n  0x40\n    /* \"#utility.yul\":831:849   */\n  dup3\n  add\n    /* \"#utility.yul\":824:883   */\n  mstore\n    /* \"#utility.yul\":915:917   */\n  0x60\n    /* \"#utility.yul\":900:918   */\n  add\n  swap1\n    /* \"#utility.yul\":745:924   */\n  jump\t// out\n    /* \"#utility.yul\":929:1283   */\ntag_18:\n    /* \"#utility.yul\":1131:1133   */\n  0x20\n    /* \"#utility.yul\":1113:1134   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":1170:1172   */\n  0x1e\n    /* \"#utility.yul\":1150:1168   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":1143:1173   */\n  mstore\n    /* \"#utility.yul\":1209:1241   */\n  0x496e76616c6964204c697175696469747920506f6f6c20616464726573730000\n    /* \"#utility.yul\":1204:1206   */\n  0x40\n    /* \"#utility.yul\":1189:1207   */\n  dup3\n  add\n    /* \"#utility.yul\":1182:1242   */\n  mstore\n    /* \"#utility.yul\":1274:1276   */\n  0x60\n    /* \"#utility.yul\":1259:1277   */\n  add\n  swap1\n    /* \"#utility.yul\":1103:1283   */\n  jump\t// out\ntag_25:\n    /* \"contract/VestingLiquidityHedgey_flattened.sol\":12288:16315  contract LiquidityPoolInteractor is Ownable, ReentrancyGuard, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":12288:16315  contract LiquidityPoolInteractor is Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc4da9247\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xc4da9247\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd25b17b6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdee3b50f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x8456cb59\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x996c6cc3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbb413c8d\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x5c975abb\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x62c35c01\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x64f00f01\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x3f4ba83a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4abb3fac\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x56d96a99\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a6b26ba\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15252:15317  function unpause() external onlyOwner {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":12472:12509  uint256 public transferInterval = 200 */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16146:16313  function setMaxAllowance(uint256 newMaxAllowance) external onlyOwner {... */\n    tag_5:\n      tag_22\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14464:14978  function withdrawal(address to, uint256 amount) external onlyOwner nonReentrant whenNotPaused {... */\n    tag_6:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5795:5879  function paused() public view virtual returns (bool) {... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14129:14458  function approveContract(uint256 amount) external onlyOwner whenNotPaused {... */\n    tag_8:\n      tag_22\n      tag_41\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":12515:12542  uint256 public maxAllowance */\n    tag_9:\n      tag_24\n      tag_44\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8602:8703  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_22\n      tag_47\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15185:15246  function pause() external onlyOwner {... */\n    tag_11:\n      tag_22\n      tag_49\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7979:8064  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":12406:12432  IERC20 public wrappedToken */\n    tag_13:\n      tag_50\n      tag_55\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":12439:12466  uint256 public blockCounter */\n    tag_14:\n      tag_24\n      tag_59\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13288:14123  function depositAndTransfer(uint256 amount) external whenNotPaused {... */\n    tag_15:\n      tag_22\n      tag_62\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":12365:12400  address public liquidityPoolAddress */\n    tag_16:\n      tag_50\n      tag_65\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15323:15685  function automatedWithdrawalToPool() external whenNotPaused {... */\n    tag_17:\n      tag_22\n      tag_68\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14984:15179  function transferOwnership(address newOwner) public override onlyOwner {... */\n    tag_18:\n      tag_22\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15252:15317  function unpause() external onlyOwner {... */\n    tag_23:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      tag_74\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7883  _checkOwner */\n      tag_75\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      jump\t// in\n    tag_74:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15300:15310  _unpause() */\n      tag_77\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15300:15308  _unpause */\n      tag_78\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15300:15310  _unpause() */\n      jump\t// in\n    tag_77:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15252:15317  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":12472:12509  uint256 public transferInterval = 200 */\n    tag_25:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16146:16313  function setMaxAllowance(uint256 newMaxAllowance) external onlyOwner {... */\n    tag_31:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      tag_80\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7883  _checkOwner */\n      tag_75\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      jump\t// in\n    tag_80:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16225:16237  maxAllowance */\n      0x06\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16225:16255  maxAllowance = newMaxAllowance */\n      dup2\n      swap1\n      sstore\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16270:16306  MaxAllowanceChanged(newMaxAllowance) */\n      mload(0x40)\n      0x3a25092a4d85e75d6b227fd7cc0f982fb0fbbe013db22c0f7c75112e523a4df1\n      swap1\n      tag_82\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16240:16255  newMaxAllowance */\n      dup4\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16270:16306  MaxAllowanceChanged(newMaxAllowance) */\n      tag_27\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16146:16313  function setMaxAllowance(uint256 newMaxAllowance) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14464:14978  function withdrawal(address to, uint256 amount) external onlyOwner nonReentrant whenNotPaused {... */\n    tag_35:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      tag_84\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7883  _checkOwner */\n      tag_75\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      jump\t// in\n    tag_84:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2347:2368  _nonReentrantBefore() */\n      tag_86\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2347:2366  _nonReentrantBefore */\n      tag_87\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2347:2368  _nonReentrantBefore() */\n      jump\t// in\n    tag_86:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5438  _requireNotPaused() */\n      tag_89\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5436  _requireNotPaused */\n      tag_90\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5438  _requireNotPaused() */\n      jump\t// in\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14576:14592  to != address(0) */\n      dup3\n      and\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14568:14623  require(to != address(0), \"Invalid withdrawal address\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14650:14651  0 */\n      0x00\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14641:14647  amount */\n      dup2\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14641:14651  amount > 0 */\n      gt\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14633:14696  require(amount > 0, \"Withdrawal amount must be greater than 0\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_97\n      jump\t// in\n    tag_95:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14714:14726  wrappedToken */\n      sload(0x03)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14714:14751  wrappedToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14755:14761  amount */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14714:14726  wrappedToken */\n      and\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14714:14736  wrappedToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14714:14751  wrappedToken.balanceOf(address(this)) */\n      tag_98\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14745:14749  this */\n      address\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14714:14751  wrappedToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_98:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14714:14761  wrappedToken.balanceOf(address(this)) >= amount */\n      lt\n      iszero\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14706:14786  require(wrappedToken.balanceOf(address(this)) >= amount, \"Insufficient balance\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_106\n      jump\t// in\n    tag_104:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14875:14887  wrappedToken */\n      sload(0x03)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14875:14908  wrappedToken.transfer(to, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14875:14887  wrappedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14875:14896  wrappedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14875:14908  wrappedToken.transfer(to, amount) */\n      tag_107\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14897:14899  to */\n      dup6\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14901:14907  amount */\n      dup6\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14875:14908  wrappedToken.transfer(to, amount) */\n      0x04\n      add\n      tag_108\n      jump\t// in\n    tag_107:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14867:14928  require(wrappedToken.transfer(to, amount), \"Transfer failed\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_116\n      jump\t// in\n    tag_114:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14960:14962  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14944:14971  TokensWithdrawn(to, amount) */\n      and\n      0x6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14964:14970  amount */\n      dup3\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14944:14971  TokensWithdrawn(to, amount) */\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2389:2409  _nonReentrantAfter() */\n      tag_118\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2389:2407  _nonReentrantAfter */\n      tag_119\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2389:2409  _nonReentrantAfter() */\n      jump\t// in\n    tag_118:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14464:14978  function withdrawal(address to, uint256 amount) external onlyOwner nonReentrant whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5795:5879  function paused() public view virtual returns (bool) {... */\n    tag_37:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5865:5872  _paused */\n      and(0xff, sload(0x02))\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5795:5879  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14129:14458  function approveContract(uint256 amount) external onlyOwner whenNotPaused {... */\n    tag_42:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      tag_122\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7883  _checkOwner */\n      tag_75\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      jump\t// in\n    tag_122:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5438  _requireNotPaused() */\n      tag_124\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5436  _requireNotPaused */\n      tag_90\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5438  _requireNotPaused() */\n      jump\t// in\n    tag_124:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14304:14316  maxAllowance */\n      sload(0x06)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14294:14300  amount */\n      dup2\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14294:14316  amount <= maxAllowance */\n      gt\n      iszero\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14286:14346  require(amount <= maxAllowance, \"Exceeds maximum allowance\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_128\n      jump\t// in\n    tag_126:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14356:14368  wrappedToken */\n      sload(0x03)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14356:14399  wrappedToken.approve(address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14356:14368  wrappedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14356:14376  wrappedToken.approve */\n      0x095ea7b3\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14356:14399  wrappedToken.approve(address(this), amount) */\n      tag_129\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14385:14389  this */\n      address\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14392:14398  amount */\n      dup6\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14356:14399  wrappedToken.approve(address(this), amount) */\n      0x04\n      add\n      tag_108\n      jump\t// in\n    tag_129:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_133:\n      pop\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14432:14442  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14415:14451  ContractApproved(msg.sender, amount) */\n      and\n      0x5f327dfbc26b4773c8990edbc20356f43975e2a38466359fad3bd2b77dee2433\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14444:14450  amount */\n      dup3\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14415:14451  ContractApproved(msg.sender, amount) */\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14129:14458  function approveContract(uint256 amount) external onlyOwner whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":12515:12542  uint256 public maxAllowance */\n    tag_44:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8602:8703  function renounceOwnership() public virtual onlyOwner {... */\n    tag_47:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      tag_136\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7883  _checkOwner */\n      tag_75\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      jump\t// in\n    tag_136:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8666:8696  _transferOwnership(address(0)) */\n      tag_77\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8693:8694  0 */\n      0x00\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8666:8684  _transferOwnership */\n      tag_139\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8666:8696  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15185:15246  function pause() external onlyOwner {... */\n    tag_49:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      tag_141\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7883  _checkOwner */\n      tag_75\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15231:15239  _pause() */\n      tag_77\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15231:15237  _pause */\n      tag_144\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15231:15239  _pause() */\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7979:8064  function owner() public view virtual returns (address) {... */\n    tag_51:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8025:8032  address */\n      0x00\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8051:8057  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7979:8064  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":12406:12432  IERC20 public wrappedToken */\n    tag_55:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":12439:12466  uint256 public blockCounter */\n    tag_59:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13288:14123  function depositAndTransfer(uint256 amount) external whenNotPaused {... */\n    tag_63:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5438  _requireNotPaused() */\n      tag_147\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5436  _requireNotPaused */\n      tag_90\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5438  _requireNotPaused() */\n      jump\t// in\n    tag_147:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13382:13383  0 */\n      0x00\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13373:13379  amount */\n      dup2\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13373:13383  amount > 0 */\n      gt\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13365:13425  require(amount > 0, \"Deposit amount must be greater than 0\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_151\n      jump\t// in\n    tag_149:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13530:13542  wrappedToken */\n      sload(0x03)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13530:13579  wrappedToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13583:13589  amount */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13530:13542  wrappedToken */\n      and\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13530:13552  wrappedToken.allowance */\n      0xdd62ed3e\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13530:13579  wrappedToken.allowance(msg.sender, address(this)) */\n      tag_152\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13553:13563  msg.sender */\n      caller\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13573:13577  this */\n      address\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13530:13579  wrappedToken.allowance(msg.sender, address(this)) */\n      0x04\n      add\n      tag_153\n      jump\t// in\n    tag_152:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_157:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13530:13589  wrappedToken.allowance(msg.sender, address(this)) >= amount */\n      lt\n      iszero\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13522:13614  require(wrappedToken.allowance(msg.sender, address(this)) >= amount, \"Not enough allowance\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_160\n      jump\t// in\n    tag_158:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13689:13701  wrappedToken */\n      sload(0x03)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13689:13749  wrappedToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13689:13701  wrappedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13689:13714  wrappedToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13689:13749  wrappedToken.transferFrom(msg.sender, address(this), amount) */\n      tag_161\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13715:13725  msg.sender */\n      caller\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13735:13739  this */\n      address\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13742:13748  amount */\n      dup7\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13689:13749  wrappedToken.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      add\n      tag_162\n      jump\t// in\n    tag_161:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_166:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13681:13769  require(wrappedToken.transferFrom(msg.sender, address(this), amount), \"Transfer failed\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_116\n      jump\t// in\n    tag_167:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13911:13927  transferInterval */\n      sload(0x05)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13895:13907  blockCounter */\n      sload(0x04)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13880:13907  block.number - blockCounter */\n      tag_169\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13880:13892  block.number */\n      number\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13880:13907  block.number - blockCounter */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13880:13927  block.number - blockCounter >= transferInterval */\n      lt\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13876:14066  if (block.number - blockCounter >= transferInterval) {... */\n      tag_171\n      jumpi\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13943:13975  executeTransferToLiquidityPool() */\n      tag_172\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13943:13973  executeTransferToLiquidityPool */\n      tag_173\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13943:13975  executeTransferToLiquidityPool() */\n      jump\t// in\n    tag_172:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14043:14055  block.number */\n      number\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14028:14040  blockCounter */\n      0x04\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14028:14055  blockCounter = block.number */\n      sstore\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":13876:14066  if (block.number - blockCounter >= transferInterval) {... */\n    tag_171:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14097:14107  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14081:14116  TokensDeposited(msg.sender, amount) */\n      and\n      0x59062170a285eb80e8c6b8ced60428442a51910635005233fc4ce084a475845e\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14109:14115  amount */\n      dup3\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14081:14116  TokensDeposited(msg.sender, amount) */\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":12365:12400  address public liquidityPoolAddress */\n    tag_65:\n      sload(0x02)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15323:15685  function automatedWithdrawalToPool() external whenNotPaused {... */\n    tag_68:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5438  _requireNotPaused() */\n      tag_176\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5436  _requireNotPaused */\n      tag_90\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5438  _requireNotPaused() */\n      jump\t// in\n    tag_176:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15524:15540  transferInterval */\n      sload(0x05)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15508:15520  blockCounter */\n      sload(0x04)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15493:15520  block.number - blockCounter */\n      tag_178\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15493:15505  block.number */\n      number\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15493:15520  block.number - blockCounter */\n      tag_170\n      jump\t// in\n    tag_178:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15493:15540  block.number - blockCounter >= transferInterval */\n      lt\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15489:15679  if (block.number - blockCounter >= transferInterval) {... */\n      tag_77\n      jumpi\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15556:15588  executeTransferToLiquidityPool() */\n      tag_180\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15556:15586  executeTransferToLiquidityPool */\n      tag_173\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15556:15588  executeTransferToLiquidityPool() */\n      jump\t// in\n    tag_180:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15656:15668  block.number */\n      number\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15641:15653  blockCounter */\n      0x04\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15641:15668  blockCounter = block.number */\n      sstore\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15323:15685  function automatedWithdrawalToPool() external whenNotPaused {... */\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14984:15179  function transferOwnership(address newOwner) public override onlyOwner {... */\n    tag_72:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      tag_182\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7883  _checkOwner */\n      tag_75\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      jump\t// in\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15073:15095  newOwner != address(0) */\n      dup2\n      and\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15065:15129  require(newOwner != address(0), \"New owner is the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_186\n      jump\t// in\n    tag_184:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15139:15172  super.transferOwnership(newOwner) */\n      tag_187\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15163:15171  newOwner */\n      dup2\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15139:15162  super.transferOwnership */\n      tag_188\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15139:15172  super.transferOwnership(newOwner) */\n      jump\t// in\n    tag_187:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":14984:15179  function transferOwnership(address newOwner) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8137:8267  function _checkOwner() internal view virtual {... */\n    tag_75:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8211:8223  _msgSender() */\n      tag_190\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8211:8221  _msgSender */\n      tag_191\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8211:8223  _msgSender() */\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8200:8223  owner() == _msgSender() */\n      and\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8200:8207  owner() */\n      tag_192\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8200:8205  owner */\n      tag_51\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8200:8207  owner() */\n      jump\t// in\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8200:8223  owner() == _msgSender() */\n      and\n      eq\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8192:8260  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_195\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6613:6730  function _unpause() internal virtual whenPaused {... */\n    tag_78:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5666:5682  _requirePaused() */\n      tag_197\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5666:5680  _requirePaused */\n      tag_198\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5666:5682  _requirePaused() */\n      jump\t// in\n    tag_197:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6671:6678  _paused */\n      0x02\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6671:6686  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6701:6723  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6710:6722  _msgSender() */\n      tag_200\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6710:6720  _msgSender */\n      tag_191\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6710:6722  _msgSender() */\n      jump\t// in\n    tag_200:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6701:6723  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_201\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6613:6730  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2422:2709  function _nonReentrantBefore() private {... */\n    tag_87:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":1845:1846  2 */\n      0x02\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2554:2561  _status */\n      sload(0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2554:2573  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2546:2609  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_205\n      jump\t// in\n    tag_203:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":1845:1846  2 */\n      0x02\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2684:2691  _status */\n      0x01\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2684:2702  _status = _ENTERED */\n      sstore\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2422:2709  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5947:6053  function _requireNotPaused() internal view virtual {... */\n    tag_90:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6017:6025  paused() */\n      tag_207\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6017:6023  paused */\n      tag_37\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6017:6025  paused() */\n      jump\t// in\n    tag_207:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6016:6025  !paused() */\n      iszero\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6008:6046  require(!paused(), \"Pausable: paused\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_210\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2715:2924  function _nonReentrantAfter() private {... */\n    tag_119:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":1802:1803  1 */\n      0x01\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2895:2917  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":2715:2924  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9204:9391  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_139:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9277:9293  address oldOwner */\n      0x00\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9296:9302  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9312:9329  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9344:9384  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9296:9302  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9344:9384  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9277:9293  address oldOwner */\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9344:9384  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9204:9391  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6366:6481  function _pause() internal virtual whenNotPaused {... */\n    tag_144:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5438  _requireNotPaused() */\n      tag_214\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5436  _requireNotPaused */\n      tag_90\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":5419:5438  _requireNotPaused() */\n      jump\t// in\n    tag_214:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6425:6432  _paused */\n      0x02\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6425:6439  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6435:6439  true */\n      0x01\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6425:6439  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6454:6474  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6461:6473  _msgSender() */\n      tag_200\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6461:6471  _msgSender */\n      tag_191\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6461:6473  _msgSender() */\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15762:16140  function executeTransferToLiquidityPool() internal {... */\n    tag_173:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15931:15943  wrappedToken */\n      sload(0x03)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15931:15968  wrappedToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15905:15928  uint256 contractBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15931:15943  wrappedToken */\n      and\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15931:15953  wrappedToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15931:15968  wrappedToken.balanceOf(address(this)) */\n      tag_219\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15962:15966  this */\n      address\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15931:15968  wrappedToken.balanceOf(address(this)) */\n      0x04\n      add\n      tag_53\n      jump\t// in\n    tag_219:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_223:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15905:15968  uint256 contractBalance = wrappedToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15982:16001  contractBalance > 0 */\n      dup1\n      iszero\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":15978:16134  if (contractBalance > 0) {... */\n      tag_187\n      jumpi\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16025:16037  wrappedToken */\n      sload(0x03)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16047:16067  liquidityPoolAddress */\n      sload(0x02)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16025:16085  wrappedToken.transfer(liquidityPoolAddress, contractBalance) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16025:16037  wrappedToken */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16025:16046  wrappedToken.transfer */\n      0xa9059cbb\n      swap3\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16025:16085  wrappedToken.transfer(liquidityPoolAddress, contractBalance) */\n      tag_225\n      swap3\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16025:16037  wrappedToken */\n      0x0100\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16047:16067  liquidityPoolAddress */\n      swap1\n      swap2\n      div\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16069:16084  contractBalance */\n      dup6\n      swap1\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16025:16085  wrappedToken.transfer(liquidityPoolAddress, contractBalance) */\n      0x04\n      add\n      tag_108\n      jump\t// in\n    tag_225:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_229\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_229:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":16017:16123  require(wrappedToken.transfer(liquidityPoolAddress, contractBalance), \"Transfer to Liquidity Pool failed\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_232\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8852:9050  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_188:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      tag_234\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7883  _checkOwner */\n      tag_75\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":7872:7885  _checkOwner() */\n      jump\t// in\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8940:8962  newOwner != address(0) */\n      dup2\n      and\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":8932:9005  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_238\n      jump\t// in\n    tag_236:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9015:9043  _transferOwnership(newOwner) */\n      tag_187\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9034:9042  newOwner */\n      dup2\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9015:9033  _transferOwnership */\n      tag_139\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":9015:9043  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":3928:4024  function _msgSender() internal view virtual returns (address) {... */\n    tag_191:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":4007:4017  msg.sender */\n      caller\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":3928:4024  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6125:6231  function _requirePaused() internal view virtual {... */\n    tag_198:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6191:6199  paused() */\n      tag_242\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6191:6197  paused */\n      tag_37\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6191:6199  paused() */\n      jump\t// in\n    tag_242:\n        /* \"contract/VestingLiquidityHedgey_flattened.sol\":6183:6224  require(paused(), \"Pausable: not paused\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_245\n      jump\t// in\n        /* \"#utility.yul\":14:189   */\n    tag_247:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":113:115   */\n    tag_249:\n        /* \"#utility.yul\":65:189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":194:392   */\n    tag_71:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_251:\n        /* \"#utility.yul\":355:386   */\n      tag_252\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_247\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:663   */\n    tag_34:\n      0x00\n      dup1\n        /* \"#utility.yul\":526:528   */\n      0x40\n        /* \"#utility.yul\":514:523   */\n      dup4\n        /* \"#utility.yul\":505:512   */\n      dup6\n        /* \"#utility.yul\":501:524   */\n      sub\n        /* \"#utility.yul\":497:529   */\n      slt\n        /* \"#utility.yul\":494:496   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":547:553   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      dup2\n        /* \"#utility.yul\":532:554   */\n      revert\n        /* \"#utility.yul\":494:496   */\n    tag_254:\n        /* \"#utility.yul\":575:606   */\n      tag_255\n        /* \"#utility.yul\":596:605   */\n      dup4\n        /* \"#utility.yul\":575:606   */\n      tag_247\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":565:606   */\n      swap5\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":638:656   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":625:657   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":484:663   */\n      jump\t// out\n        /* \"#utility.yul\":668:965   */\n    tag_113:\n      0x00\n        /* \"#utility.yul\":788:790   */\n      0x20\n        /* \"#utility.yul\":776:785   */\n      dup3\n        /* \"#utility.yul\":767:774   */\n      dup5\n        /* \"#utility.yul\":763:786   */\n      sub\n        /* \"#utility.yul\":759:791   */\n      slt\n        /* \"#utility.yul\":756:758   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":809:815   */\n      dup1\n        /* \"#utility.yul\":801:807   */\n      dup2\n        /* \"#utility.yul\":794:816   */\n      revert\n        /* \"#utility.yul\":756:758   */\n    tag_257:\n        /* \"#utility.yul\":846:855   */\n      dup2\n        /* \"#utility.yul\":840:856   */\n      mload\n        /* \"#utility.yul\":899:904   */\n      dup1\n        /* \"#utility.yul\":892:905   */\n      iszero\n        /* \"#utility.yul\":885:906   */\n      iszero\n        /* \"#utility.yul\":878:883   */\n      dup2\n        /* \"#utility.yul\":875:907   */\n      eq\n        /* \"#utility.yul\":865:867   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":926:932   */\n      dup2\n        /* \"#utility.yul\":918:924   */\n      dup3\n        /* \"#utility.yul\":911:933   */\n      revert\n        /* \"#utility.yul\":970:1160   */\n    tag_30:\n      0x00\n        /* \"#utility.yul\":1082:1084   */\n      0x20\n        /* \"#utility.yul\":1070:1079   */\n      dup3\n        /* \"#utility.yul\":1061:1068   */\n      dup5\n        /* \"#utility.yul\":1057:1080   */\n      sub\n        /* \"#utility.yul\":1053:1085   */\n      slt\n        /* \"#utility.yul\":1050:1052   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":1103:1109   */\n      dup1\n        /* \"#utility.yul\":1095:1101   */\n      dup2\n        /* \"#utility.yul\":1088:1110   */\n      revert\n        /* \"#utility.yul\":1050:1052   */\n    tag_260:\n      pop\n        /* \"#utility.yul\":1131:1154   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1040:1160   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1165:1359   */\n    tag_103:\n      0x00\n        /* \"#utility.yul\":1288:1290   */\n      0x20\n        /* \"#utility.yul\":1276:1285   */\n      dup3\n        /* \"#utility.yul\":1267:1274   */\n      dup5\n        /* \"#utility.yul\":1263:1286   */\n      sub\n        /* \"#utility.yul\":1259:1291   */\n      slt\n        /* \"#utility.yul\":1256:1258   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":1309:1315   */\n      dup1\n        /* \"#utility.yul\":1301:1307   */\n      dup2\n        /* \"#utility.yul\":1294:1316   */\n      revert\n        /* \"#utility.yul\":1256:1258   */\n    tag_262:\n      pop\n        /* \"#utility.yul\":1337:1353   */\n      mload\n      swap2\n        /* \"#utility.yul\":1246:1359   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1364:1567   */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1560   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1510:1561   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1498:1500   */\n      0x20\n        /* \"#utility.yul\":1483:1501   */\n      add\n      swap1\n        /* \"#utility.yul\":1465:1567   */\n      jump\t// out\n        /* \"#utility.yul\":1572:1876   */\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1802:1817   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":1784:1818   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1854:1869   */\n      swap2\n      and\n        /* \"#utility.yul\":1849:1851   */\n      0x20\n        /* \"#utility.yul\":1834:1852   */\n      dup3\n      add\n        /* \"#utility.yul\":1827:1870   */\n      mstore\n        /* \"#utility.yul\":1734:1736   */\n      0x40\n        /* \"#utility.yul\":1719:1737   */\n      add\n      swap1\n        /* \"#utility.yul\":1701:1876   */\n      jump\t// out\n        /* \"#utility.yul\":1881:2256   */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2139:2154   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":2121:2155   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2191:2206   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":2186:2188   */\n      0x20\n        /* \"#utility.yul\":2171:2189   */\n      dup3\n      add\n        /* \"#utility.yul\":2164:2207   */\n      mstore\n        /* \"#utility.yul\":2238:2240   */\n      0x40\n        /* \"#utility.yul\":2223:2241   */\n      dup2\n      add\n        /* \"#utility.yul\":2216:2250   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2071:2073   */\n      0x60\n        /* \"#utility.yul\":2056:2074   */\n      add\n      swap1\n        /* \"#utility.yul\":2038:2256   */\n      jump\t// out\n        /* \"#utility.yul\":2261:2535   */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2453:2485   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":2435:2486   */\n      dup3\n      mstore\n        /* \"#utility.yul\":2517:2519   */\n      0x20\n        /* \"#utility.yul\":2502:2520   */\n      dup3\n      add\n        /* \"#utility.yul\":2495:2529   */\n      mstore\n        /* \"#utility.yul\":2423:2425   */\n      0x40\n        /* \"#utility.yul\":2408:2426   */\n      add\n      swap1\n        /* \"#utility.yul\":2390:2535   */\n      jump\t// out\n        /* \"#utility.yul\":2540:2727   */\n    tag_39:\n        /* \"#utility.yul\":2705:2719   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2698:2720   */\n      iszero\n        /* \"#utility.yul\":2680:2721   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2668:2670   */\n      0x20\n        /* \"#utility.yul\":2653:2671   */\n      add\n      swap1\n        /* \"#utility.yul\":2635:2727   */\n      jump\t// out\n        /* \"#utility.yul\":2954:3298   */\n    tag_245:\n        /* \"#utility.yul\":3156:3158   */\n      0x20\n        /* \"#utility.yul\":3138:3159   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3195:3197   */\n      0x14\n        /* \"#utility.yul\":3175:3193   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3168:3198   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":3229:3231   */\n      0x40\n        /* \"#utility.yul\":3214:3232   */\n      dup3\n      add\n        /* \"#utility.yul\":3207:3257   */\n      mstore\n        /* \"#utility.yul\":3289:3291   */\n      0x60\n        /* \"#utility.yul\":3274:3292   */\n      add\n      swap1\n        /* \"#utility.yul\":3128:3298   */\n      jump\t// out\n        /* \"#utility.yul\":3303:3704   */\n    tag_151:\n        /* \"#utility.yul\":3505:3507   */\n      0x20\n        /* \"#utility.yul\":3487:3508   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3544:3546   */\n      0x25\n        /* \"#utility.yul\":3524:3542   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3517:3547   */\n      mstore\n        /* \"#utility.yul\":3583:3617   */\n      0x4465706f73697420616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":3578:3580   */\n      0x40\n        /* \"#utility.yul\":3563:3581   */\n      dup3\n      add\n        /* \"#utility.yul\":3556:3618   */\n      mstore\n      shl(0xdc, 0x068616e203)\n        /* \"#utility.yul\":3649:3651   */\n      0x60\n        /* \"#utility.yul\":3634:3652   */\n      dup3\n      add\n        /* \"#utility.yul\":3627:3662   */\n      mstore\n        /* \"#utility.yul\":3694:3697   */\n      0x80\n        /* \"#utility.yul\":3679:3698   */\n      add\n      swap1\n        /* \"#utility.yul\":3477:3704   */\n      jump\t// out\n        /* \"#utility.yul\":3709:4111   */\n    tag_238:\n        /* \"#utility.yul\":3911:3913   */\n      0x20\n        /* \"#utility.yul\":3893:3914   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3950:3952   */\n      0x26\n        /* \"#utility.yul\":3930:3948   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3923:3953   */\n      mstore\n        /* \"#utility.yul\":3989:4023   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3984:3986   */\n      0x40\n        /* \"#utility.yul\":3969:3987   */\n      dup3\n      add\n        /* \"#utility.yul\":3962:4024   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4055:4057   */\n      0x60\n        /* \"#utility.yul\":4040:4058   */\n      dup3\n      add\n        /* \"#utility.yul\":4033:4069   */\n      mstore\n        /* \"#utility.yul\":4101:4104   */\n      0x80\n        /* \"#utility.yul\":4086:4105   */\n      add\n      swap1\n        /* \"#utility.yul\":3883:4111   */\n      jump\t// out\n        /* \"#utility.yul\":4116:4455   */\n    tag_116:\n        /* \"#utility.yul\":4318:4320   */\n      0x20\n        /* \"#utility.yul\":4300:4321   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4357:4359   */\n      0x0f\n        /* \"#utility.yul\":4337:4355   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4330:4360   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":4391:4393   */\n      0x40\n        /* \"#utility.yul\":4376:4394   */\n      dup3\n      add\n        /* \"#utility.yul\":4369:4414   */\n      mstore\n        /* \"#utility.yul\":4446:4448   */\n      0x60\n        /* \"#utility.yul\":4431:4449   */\n      add\n      swap1\n        /* \"#utility.yul\":4290:4455   */\n      jump\t// out\n        /* \"#utility.yul\":4460:4804   */\n    tag_106:\n        /* \"#utility.yul\":4662:4664   */\n      0x20\n        /* \"#utility.yul\":4644:4665   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4701:4703   */\n      0x14\n        /* \"#utility.yul\":4681:4699   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4674:4704   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":4735:4737   */\n      0x40\n        /* \"#utility.yul\":4720:4738   */\n      dup3\n      add\n        /* \"#utility.yul\":4713:4763   */\n      mstore\n        /* \"#utility.yul\":4795:4797   */\n      0x60\n        /* \"#utility.yul\":4780:4798   */\n      add\n      swap1\n        /* \"#utility.yul\":4634:4804   */\n      jump\t// out\n        /* \"#utility.yul\":4809:5149   */\n    tag_210:\n        /* \"#utility.yul\":5011:5013   */\n      0x20\n        /* \"#utility.yul\":4993:5014   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5050:5052   */\n      0x10\n        /* \"#utility.yul\":5030:5048   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5023:5053   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5084:5086   */\n      0x40\n        /* \"#utility.yul\":5069:5087   */\n      dup3\n      add\n        /* \"#utility.yul\":5062:5108   */\n      mstore\n        /* \"#utility.yul\":5140:5142   */\n      0x60\n        /* \"#utility.yul\":5125:5143   */\n      add\n      swap1\n        /* \"#utility.yul\":4983:5149   */\n      jump\t// out\n        /* \"#utility.yul\":5154:5510   */\n    tag_195:\n        /* \"#utility.yul\":5356:5358   */\n      0x20\n        /* \"#utility.yul\":5338:5359   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5375:5393   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5368:5398   */\n      mstore\n        /* \"#utility.yul\":5434:5468   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5429:5431   */\n      0x40\n        /* \"#utility.yul\":5414:5432   */\n      dup3\n      add\n        /* \"#utility.yul\":5407:5469   */\n      mstore\n        /* \"#utility.yul\":5501:5503   */\n      0x60\n        /* \"#utility.yul\":5486:5504   */\n      add\n      swap1\n        /* \"#utility.yul\":5328:5510   */\n      jump\t// out\n        /* \"#utility.yul\":5515:5868   */\n    tag_186:\n        /* \"#utility.yul\":5717:5719   */\n      0x20\n        /* \"#utility.yul\":5699:5720   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5756:5758   */\n      0x1d\n        /* \"#utility.yul\":5736:5754   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5729:5759   */\n      mstore\n        /* \"#utility.yul\":5795:5826   */\n      0x4e6577206f776e657220697320746865207a65726f2061646472657373000000\n        /* \"#utility.yul\":5790:5792   */\n      0x40\n        /* \"#utility.yul\":5775:5793   */\n      dup3\n      add\n        /* \"#utility.yul\":5768:5827   */\n      mstore\n        /* \"#utility.yul\":5859:5861   */\n      0x60\n        /* \"#utility.yul\":5844:5862   */\n      add\n      swap1\n        /* \"#utility.yul\":5689:5868   */\n      jump\t// out\n        /* \"#utility.yul\":5873:6277   */\n    tag_97:\n        /* \"#utility.yul\":6075:6077   */\n      0x20\n        /* \"#utility.yul\":6057:6078   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6114:6116   */\n      0x28\n        /* \"#utility.yul\":6094:6112   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6087:6117   */\n      mstore\n        /* \"#utility.yul\":6153:6187   */\n      0x5769746864726177616c20616d6f756e74206d75737420626520677265617465\n        /* \"#utility.yul\":6148:6150   */\n      0x40\n        /* \"#utility.yul\":6133:6151   */\n      dup3\n      add\n        /* \"#utility.yul\":6126:6188   */\n      mstore\n      shl(0xc4, 0x072207468616e203)\n        /* \"#utility.yul\":6219:6221   */\n      0x60\n        /* \"#utility.yul\":6204:6222   */\n      dup3\n      add\n        /* \"#utility.yul\":6197:6235   */\n      mstore\n        /* \"#utility.yul\":6267:6270   */\n      0x80\n        /* \"#utility.yul\":6252:6271   */\n      add\n      swap1\n        /* \"#utility.yul\":6047:6277   */\n      jump\t// out\n        /* \"#utility.yul\":6282:6626   */\n    tag_160:\n        /* \"#utility.yul\":6484:6486   */\n      0x20\n        /* \"#utility.yul\":6466:6487   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6523:6525   */\n      0x14\n        /* \"#utility.yul\":6503:6521   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6496:6526   */\n      mstore\n      shl(0x60, 0x4e6f7420656e6f75676820616c6c6f77616e6365)\n        /* \"#utility.yul\":6557:6559   */\n      0x40\n        /* \"#utility.yul\":6542:6560   */\n      dup3\n      add\n        /* \"#utility.yul\":6535:6585   */\n      mstore\n        /* \"#utility.yul\":6617:6619   */\n      0x60\n        /* \"#utility.yul\":6602:6620   */\n      add\n      swap1\n        /* \"#utility.yul\":6456:6626   */\n      jump\t// out\n        /* \"#utility.yul\":6631:6980   */\n    tag_128:\n        /* \"#utility.yul\":6833:6835   */\n      0x20\n        /* \"#utility.yul\":6815:6836   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6872:6874   */\n      0x19\n        /* \"#utility.yul\":6852:6870   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6845:6875   */\n      mstore\n        /* \"#utility.yul\":6911:6938   */\n      0x45786365656473206d6178696d756d20616c6c6f77616e636500000000000000\n        /* \"#utility.yul\":6906:6908   */\n      0x40\n        /* \"#utility.yul\":6891:6909   */\n      dup3\n      add\n        /* \"#utility.yul\":6884:6939   */\n      mstore\n        /* \"#utility.yul\":6971:6973   */\n      0x60\n        /* \"#utility.yul\":6956:6974   */\n      add\n      swap1\n        /* \"#utility.yul\":6805:6980   */\n      jump\t// out\n        /* \"#utility.yul\":6985:7335   */\n    tag_94:\n        /* \"#utility.yul\":7187:7189   */\n      0x20\n        /* \"#utility.yul\":7169:7190   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7226:7228   */\n      0x1a\n        /* \"#utility.yul\":7206:7224   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7199:7229   */\n      mstore\n        /* \"#utility.yul\":7265:7293   */\n      0x496e76616c6964207769746864726177616c2061646472657373000000000000\n        /* \"#utility.yul\":7260:7262   */\n      0x40\n        /* \"#utility.yul\":7245:7263   */\n      dup3\n      add\n        /* \"#utility.yul\":7238:7294   */\n      mstore\n        /* \"#utility.yul\":7326:7328   */\n      0x60\n        /* \"#utility.yul\":7311:7329   */\n      add\n      swap1\n        /* \"#utility.yul\":7159:7335   */\n      jump\t// out\n        /* \"#utility.yul\":7340:7737   */\n    tag_232:\n        /* \"#utility.yul\":7542:7544   */\n      0x20\n        /* \"#utility.yul\":7524:7545   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7581:7583   */\n      0x21\n        /* \"#utility.yul\":7561:7579   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7554:7584   */\n      mstore\n        /* \"#utility.yul\":7620:7654   */\n      0x5472616e7366657220746f204c697175696469747920506f6f6c206661696c65\n        /* \"#utility.yul\":7615:7617   */\n      0x40\n        /* \"#utility.yul\":7600:7618   */\n      dup3\n      add\n        /* \"#utility.yul\":7593:7655   */\n      mstore\n      shl(0xfa, 0x19)\n        /* \"#utility.yul\":7686:7688   */\n      0x60\n        /* \"#utility.yul\":7671:7689   */\n      dup3\n      add\n        /* \"#utility.yul\":7664:7695   */\n      mstore\n        /* \"#utility.yul\":7727:7730   */\n      0x80\n        /* \"#utility.yul\":7712:7731   */\n      add\n      swap1\n        /* \"#utility.yul\":7514:7737   */\n      jump\t// out\n        /* \"#utility.yul\":7742:8097   */\n    tag_205:\n        /* \"#utility.yul\":7944:7946   */\n      0x20\n        /* \"#utility.yul\":7926:7947   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7983:7985   */\n      0x1f\n        /* \"#utility.yul\":7963:7981   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7956:7986   */\n      mstore\n        /* \"#utility.yul\":8022:8055   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8017:8019   */\n      0x40\n        /* \"#utility.yul\":8002:8020   */\n      dup3\n      add\n        /* \"#utility.yul\":7995:8056   */\n      mstore\n        /* \"#utility.yul\":8088:8090   */\n      0x60\n        /* \"#utility.yul\":8073:8091   */\n      add\n      swap1\n        /* \"#utility.yul\":7916:8097   */\n      jump\t// out\n        /* \"#utility.yul\":8102:8279   */\n    tag_27:\n        /* \"#utility.yul\":8248:8273   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8236:8238   */\n      0x20\n        /* \"#utility.yul\":8221:8239   */\n      add\n      swap1\n        /* \"#utility.yul\":8203:8279   */\n      jump\t// out\n        /* \"#utility.yul\":8284:8512   */\n    tag_170:\n      0x00\n        /* \"#utility.yul\":8352:8353   */\n      dup3\n        /* \"#utility.yul\":8349:8350   */\n      dup3\n        /* \"#utility.yul\":8346:8354   */\n      lt\n        /* \"#utility.yul\":8343:8345   */\n      iszero\n      tag_285\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":8377:8411   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8434:8438   */\n      0x11\n        /* \"#utility.yul\":8431:8432   */\n      0x04\n        /* \"#utility.yul\":8424:8439   */\n      mstore\n        /* \"#utility.yul\":8465:8469   */\n      0x24\n        /* \"#utility.yul\":8384:8388   */\n      dup2\n        /* \"#utility.yul\":8452:8470   */\n      revert\n        /* \"#utility.yul\":8343:8345   */\n    tag_285:\n      pop\n        /* \"#utility.yul\":8497:8506   */\n      sub\n      swap1\n        /* \"#utility.yul\":8333:8512   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200a1baf4e7a5b0045311481fcb37b18a3d787433354257f400db322e9393527e664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1285:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "171:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "180:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "183:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "130:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "141:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "156:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "161:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "152:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "152:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "165:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "148:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "148:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "137:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "137:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "127:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:50:1"
															},
															"nodeType": "YulIf",
															"src": "117:2:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:1",
														"type": ""
													}
												],
												"src": "14:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "313:253:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "359:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "368:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "376:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "361:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "361:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "361:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "334:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "343:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "355:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:32:1"
															},
															"nodeType": "YulIf",
															"src": "323:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "394:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "436:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "404:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "404:42:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "394:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "455:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "512:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "465:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:51:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "525:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "545:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "556:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "535:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "263:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "274:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "286:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "302:6:1",
														"type": ""
													}
												],
												"src": "198:368:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "745:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "762:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "755:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "796:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "807:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "792:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "792:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "812:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "785:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "785:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "835:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "846:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "831:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "831:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "851:31:1",
																		"type": "",
																		"value": "Invalid wrapped token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "824:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "824:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "892:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "904:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "915:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "900:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "892:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a8da99c5de746951b80724325f566899425dfe8ad65df383979ced2a73887a62__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "722:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "736:4:1",
														"type": ""
													}
												],
												"src": "571:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1103:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1120:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1131:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1113:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1154:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1165:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1150:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1150:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1170:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1143:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1143:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1193:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1204:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1189:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1209:32:1",
																		"type": "",
																		"value": "Invalid Liquidity Pool address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1182:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1182:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1251:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1263:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1274:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1259:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1251:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bec7f155b27be5ed5d4c4aac32703590004616202359f331ff690d39acf70e3e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1080:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1094:4:1",
														"type": ""
													}
												],
												"src": "929:354:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_a8da99c5de746951b80724325f566899425dfe8ad65df383979ced2a73887a62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Invalid wrapped token address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bec7f155b27be5ed5d4c4aac32703590004616202359f331ff690d39acf70e3e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Invalid Liquidity Pool address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260c86005553480156200001657600080fd5b50604051620011913803806200119183398101604081905262000039916200016e565b6200004d62000047620000fd565b62000101565b600180556002805460ff191690556001600160a01b0383166200008d5760405162461bcd60e51b81526004016200008490620001e5565b60405180910390fd5b6001600160a01b038216620000b65760405162461bcd60e51b81526004016200008490620001ae565b60028054610100600160a81b0319166101006001600160a01b0395861602179055600380546001600160a01b0319169290931691909117909155600655436004556200021c565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200016957600080fd5b919050565b60008060006060848603121562000183578283fd5b6200018e8462000151565b92506200019e6020850162000151565b9150604084015190509250925092565b6020808252601d908201527f496e76616c6964207772617070656420746f6b656e2061646472657373000000604082015260600190565b6020808252601e908201527f496e76616c6964204c697175696469747920506f6f6c20616464726573730000604082015260600190565b610f65806200022c6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638456cb5911610097578063c4da924711610066578063c4da9247146101b8578063d25b17b6146101cb578063dee3b50f146101d3578063f2fde38b146101db57610100565b80638456cb591461018b5780638da5cb5b14610193578063996c6cc3146101a8578063bb413c8d146101b057610100565b80635c975abb116100d35780635c975abb1461015357806362c35c011461016857806364f00f011461017b578063715018a61461018357610100565b80633f4ba83a146101055780634abb3fac1461010f57806356d96a991461012d5780635a6b26ba14610140575b600080fd5b61010d6101ee565b005b610117610200565b6040516101249190610f03565b60405180910390f35b61010d61013b366004610b5b565b610206565b61010d61014e366004610b12565b61024e565b61015b610440565b6040516101249190610bf6565b61010d610176366004610b5b565b610449565b610117610544565b61010d61054a565b61010d61055c565b61019b61056c565b6040516101249190610b8b565b61019b61057b565b61011761058a565b61010d6101c6366004610b5b565b610590565b61019b610755565b61010d610769565b61010d6101e9366004610af1565b610794565b6101f66107ce565b6101fe61080d565b565b60055481565b61020e6107ce565b60068190556040517f3a25092a4d85e75d6b227fd7cc0f982fb0fbbe013db22c0f7c75112e523a4df190610243908390610f03565b60405180910390a150565b6102566107ce565b61025e61085f565b610266610889565b6001600160a01b0382166102955760405162461bcd60e51b815260040161028c90610e54565b60405180910390fd5b600081116102b55760405162461bcd60e51b815260040161028c90610da7565b6003546040516370a0823160e01b815282916001600160a01b0316906370a08231906102e5903090600401610b8b565b60206040518083038186803b1580156102fd57600080fd5b505afa158015610311573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103359190610b73565b10156103535760405162461bcd60e51b815260040161028c90610ce3565b60035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906103859085908590600401610bdd565b602060405180830381600087803b15801561039f57600080fd5b505af11580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d79190610b3b565b6103f35760405162461bcd60e51b815260040161028c90610cba565b816001600160a01b03167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b8260405161042c9190610f03565b60405180910390a261043c6108ae565b5050565b60025460ff1690565b6104516107ce565b610459610889565b60065481111561047b5760405162461bcd60e51b815260040161028c90610e1d565b60035460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906104ad9030908590600401610bdd565b602060405180830381600087803b1580156104c757600080fd5b505af11580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190610b3b565b50336001600160a01b03167f5f327dfbc26b4773c8990edbc20356f43975e2a38466359fad3bd2b77dee2433826040516105399190610f03565b60405180910390a250565b60065481565b6105526107ce565b6101fe60006108b4565b6105646107ce565b6101fe610904565b6000546001600160a01b031690565b6003546001600160a01b031681565b60045481565b610598610889565b600081116105b85760405162461bcd60e51b815260040161028c90610c2f565b600354604051636eb1769f60e11b815282916001600160a01b03169063dd62ed3e906105ea9033903090600401610b9f565b60206040518083038186803b15801561060257600080fd5b505afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190610b73565b10156106585760405162461bcd60e51b815260040161028c90610def565b6003546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061068c90339030908690600401610bb9565b602060405180830381600087803b1580156106a657600080fd5b505af11580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106de9190610b3b565b6106fa5760405162461bcd60e51b815260040161028c90610cba565b60055460045461070a9043610f0c565b1061071c57610717610942565b436004555b336001600160a01b03167f59062170a285eb80e8c6b8ced60428442a51910635005233fc4ce084a475845e826040516105399190610f03565b60025461010090046001600160a01b031681565b610771610889565b6005546004546107819043610f0c565b106101fe5761078e610942565b43600455565b61079c6107ce565b6001600160a01b0381166107c25760405162461bcd60e51b815260040161028c90610d70565b6107cb81610a76565b50565b6107d6610aad565b6001600160a01b03166107e761056c565b6001600160a01b0316146101fe5760405162461bcd60e51b815260040161028c90610d3b565b610815610ab1565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610848610aad565b6040516108559190610b8b565b60405180910390a1565b600260015414156108825760405162461bcd60e51b815260040161028c90610ecc565b6002600155565b610891610440565b156101fe5760405162461bcd60e51b815260040161028c90610d11565b60018055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61090c610889565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610848610aad565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610973903090600401610b8b565b60206040518083038186803b15801561098b57600080fd5b505afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c39190610b73565b905080156107cb5760035460025460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92610a0892610100909104909116908590600401610bdd565b602060405180830381600087803b158015610a2257600080fd5b505af1158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190610b3b565b6107cb5760405162461bcd60e51b815260040161028c90610e8b565b610a7e6107ce565b6001600160a01b038116610aa45760405162461bcd60e51b815260040161028c90610c74565b6107cb816108b4565b3390565b610ab9610440565b6101fe5760405162461bcd60e51b815260040161028c90610c01565b80356001600160a01b0381168114610aec57600080fd5b919050565b600060208284031215610b02578081fd5b610b0b82610ad5565b9392505050565b60008060408385031215610b24578081fd5b610b2d83610ad5565b946020939093013593505050565b600060208284031215610b4c578081fd5b81518015158114610b0b578182fd5b600060208284031215610b6c578081fd5b5035919050565b600060208284031215610b84578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526025908201527f4465706f73697420616d6f756e74206d75737420626520677265617465722074604082015264068616e20360dc1b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604082015260600190565b60208082526028908201527f5769746864726177616c20616d6f756e74206d75737420626520677265617465604082015267072207468616e20360c41b606082015260800190565b6020808252601490820152734e6f7420656e6f75676820616c6c6f77616e636560601b604082015260600190565b60208082526019908201527f45786365656473206d6178696d756d20616c6c6f77616e636500000000000000604082015260600190565b6020808252601a908201527f496e76616c6964207769746864726177616c2061646472657373000000000000604082015260600190565b60208082526021908201527f5472616e7366657220746f204c697175696469747920506f6f6c206661696c656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b600082821015610f2a57634e487b7160e01b81526011600452602481fd5b50039056fea26469706673582212200a1baf4e7a5b0045311481fcb37b18a3d787433354257f400db322e9393527e664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xC8 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1191 CODESIZE SUB DUP1 PUSH3 0x1191 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x39 SWAP2 PUSH3 0x16E JUMP JUMPDEST PUSH3 0x4D PUSH3 0x47 PUSH3 0xFD JUMP JUMPDEST PUSH3 0x101 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x84 SWAP1 PUSH3 0x1E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x84 SWAP1 PUSH3 0x1AE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND MUL OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE NUMBER PUSH1 0x4 SSTORE PUSH3 0x21C JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x183 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH3 0x18E DUP5 PUSH3 0x151 JUMP JUMPDEST SWAP3 POP PUSH3 0x19E PUSH1 0x20 DUP6 ADD PUSH3 0x151 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207772617070656420746F6B656E2061646472657373000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204C697175696469747920506F6F6C20616464726573730000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0xF65 DUP1 PUSH3 0x22C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC4DA9247 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC4DA9247 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xD25B17B6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xDEE3B50F EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DB JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x996C6CC3 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xBB413C8D EQ PUSH2 0x1B0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x62C35C01 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x64F00F01 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x183 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x4ABB3FAC EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x56D96A99 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x5A6B26BA EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x1EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST PUSH2 0x15B PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x117 PUSH2 0x544 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x54A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x55C JUMP JUMPDEST PUSH2 0x19B PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x19B PUSH2 0x57B JUMP JUMPDEST PUSH2 0x117 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x755 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x769 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x80D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3A25092A4D85E75D6B227FD7CC0F982FB0FBBE013DB22C0F7C75112E523A4DF1 SWAP1 PUSH2 0x243 SWAP1 DUP4 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x256 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x25E PUSH2 0x85F JUMP JUMPDEST PUSH2 0x266 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x295 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2E5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x311 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST LT ISZERO PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x385 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xCBA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x43C PUSH2 0x8AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x451 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x459 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 GT ISZERO PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0x4AD SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5F327DFBC26B4773C8990EDBC20356F43975E2A38466359FAD3BD2B77DEE2433 DUP3 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x1FE PUSH1 0x0 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x564 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x904 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x598 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x5EA SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x616 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST LT ISZERO PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x68C SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DE SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x70A SWAP1 NUMBER PUSH2 0xF0C JUMP JUMPDEST LT PUSH2 0x71C JUMPI PUSH2 0x717 PUSH2 0x942 JUMP JUMPDEST NUMBER PUSH1 0x4 SSTORE JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x59062170A285EB80E8C6B8CED60428442A51910635005233FC4CE084A475845E DUP3 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x771 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x781 SWAP1 NUMBER PUSH2 0xF0C JUMP JUMPDEST LT PUSH2 0x1FE JUMPI PUSH2 0x78E PUSH2 0x942 JUMP JUMPDEST NUMBER PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x79C PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0xA76 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7D6 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7E7 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x815 PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x848 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x855 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x891 PUSH2 0x440 JUMP JUMPDEST ISZERO PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x90C PUSH2 0x889 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x848 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x973 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x7CB JUMPI PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xA08 SWAP3 PUSH2 0x100 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0xA7E PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0x8B4 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0xAB9 PUSH2 0x440 JUMP JUMPDEST PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xC01 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB02 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB0B DUP3 PUSH2 0xAD5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB24 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB2D DUP4 PUSH2 0xAD5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB0B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB84 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6577206F776E657220697320746865207A65726F2061646472657373000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x72207468616E203 PUSH1 0xC4 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F75676820616C6C6F77616E6365 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178696D756D20616C6C6F77616E636500000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207769746864726177616C2061646472657373000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220746F204C697175696469747920506F6F6C206661696C65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SHL 0xAF 0x4E PUSH27 0x5B0045311481FCB37B18A3D787433354257F400DB322E9393527E6 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "12288:4027:0:-:0;;;12506:3;12472:37;;12802:480;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7714:32;7733:12;:10;:12::i;:::-;7714:18;:32::i;:::-;1802:1;1907:22;;5176:7;:15;;-1:-1:-1;;5176:15:0;;;-1:-1:-1;;;;;12909:35:0;;12901:78;;;;-1:-1:-1;;;12901:78:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;12997:27:0;;12989:69;;;;-1:-1:-1;;;12989:69:0;;;;;;;:::i;:::-;13069:20;:44;;-1:-1:-1;;;;;;13069:44:0;;-1:-1:-1;;;;;13069:44:0;;;;;;;13123:12;:36;;-1:-1:-1;;;;;;13123:36:0;;;;;;;;;;;;13169:12;:28;13263:12;13248;:27;12288:4027;;3928:96;4007:10;3928:96;:::o;9204:187::-;9277:16;9296:6;;-1:-1:-1;;;;;9312:17:0;;;-1:-1:-1;;;;;;9312:17:0;;;;;;9344:40;;9296:6;;;;;;;9344:40;;9277:16;9344:40;9204:187;;:::o;14:179:1:-;95:13;;-1:-1:-1;;;;;137:31:1;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:368::-;;;;355:2;343:9;334:7;330:23;326:32;323:2;;;376:6;368;361:22;323:2;404:42;436:9;404:42;:::i;:::-;394:52;;465:51;512:2;501:9;497:18;465:51;:::i;:::-;455:61;;556:2;545:9;541:18;535:25;525:35;;313:253;;;;;:::o;571:353::-;773:2;755:21;;;812:2;792:18;;;785:30;851:31;846:2;831:18;;824:59;915:2;900:18;;745:179::o;929:354::-;1131:2;1113:21;;;1170:2;1150:18;;;1143:30;1209:32;1204:2;1189:18;;1182:60;1274:2;1259:18;;1103:180::o;:::-;12288:4027:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8514:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:1"
															},
															"nodeType": "YulIf",
															"src": "113:2:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:1",
														"type": ""
													}
												],
												"src": "14:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:1"
															},
															"nodeType": "YulIf",
															"src": "274:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:1",
														"type": ""
													}
												],
												"src": "194:198:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "530:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "539:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "547:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "532:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "532:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "505:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "514:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "497:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:32:1"
															},
															"nodeType": "YulIf",
															"src": "494:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "575:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:31:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "615:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "625:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "442:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "453:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "397:266:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "746:219:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "792:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "801:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "809:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "794:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "794:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "794:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "767:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "776:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "788:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "759:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "759:32:1"
															},
															"nodeType": "YulIf",
															"src": "756:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "827:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "846:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "840:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "840:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "831:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "909:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "918:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "926:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "911:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "911:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "911:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "878:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "899:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "892:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "892:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "885:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "885:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "875:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "875:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "868:40:1"
															},
															"nodeType": "YulIf",
															"src": "865:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "944:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "954:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "712:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "723:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "735:6:1",
														"type": ""
													}
												],
												"src": "668:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1086:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1095:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1103:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1088:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1088:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1088:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1061:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1070:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1057:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1082:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1053:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:32:1"
															},
															"nodeType": "YulIf",
															"src": "1050:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1121:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1144:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1131:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1006:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1017:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1029:6:1",
														"type": ""
													}
												],
												"src": "970:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1292:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1301:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1309:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1294:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1294:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1294:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1267:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1276:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:32:1"
															},
															"nodeType": "YulIf",
															"src": "1256:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1327:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1343:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1337:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1327:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1212:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1223:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1235:6:1",
														"type": ""
													}
												],
												"src": "1165:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1465:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1475:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1487:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1498:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1483:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1475:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1517:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1548:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1553:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1544:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1544:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1557:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1540:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1540:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1528:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1528:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1510:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1510:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1434:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1445:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1456:4:1",
														"type": ""
													}
												],
												"src": "1364:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1701:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1711:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1723:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1734:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1719:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1711:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1746:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1764:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1769:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1760:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1773:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1750:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1806:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1814:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1802:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1802:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1784:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1838:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1849:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1834:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1834:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1858:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1866:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1827:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1827:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1827:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1662:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1673:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1681:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1692:4:1",
														"type": ""
													}
												],
												"src": "1572:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2038:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2048:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2060:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2056:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2048:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2083:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2101:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2106:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2110:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2087:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2128:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2143:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2151:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2139:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2121:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2175:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2186:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2171:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2195:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2203:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2191:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2191:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2164:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2238:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2223:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2223:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2243:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2216:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2216:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1991:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2002:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2010:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2018:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2029:4:1",
														"type": ""
													}
												],
												"src": "1881:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2390:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2400:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2442:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2457:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2473:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2478:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2469:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2469:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2482:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2465:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2465:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2453:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2453:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2435:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2435:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2517:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2502:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2522:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2495:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2351:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2362:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2370:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2381:4:1",
														"type": ""
													}
												],
												"src": "2261:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2635:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2645:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2657:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2668:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2653:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2645:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2712:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2705:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2705:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2680:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2604:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2615:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2626:4:1",
														"type": ""
													}
												],
												"src": "2540:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2847:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2857:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2869:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2857:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2899:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2914:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2930:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2935:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2926:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2926:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2939:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2922:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2922:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2910:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2910:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2892:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$379__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2816:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2827:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2838:4:1",
														"type": ""
													}
												],
												"src": "2732:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3128:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3145:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3138:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3138:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3179:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3190:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3175:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3175:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3195:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3168:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3218:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3229:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3214:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3234:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3207:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3207:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3266:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3278:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3289:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3274:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3274:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3266:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3105:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3119:4:1",
														"type": ""
													}
												],
												"src": "2954:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3477:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3494:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3505:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3487:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3487:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3539:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3524:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3524:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3544:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3517:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3517:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3567:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3578:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3563:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3563:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3583:34:1",
																		"type": "",
																		"value": "Deposit amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3556:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3556:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:7:1",
																		"type": "",
																		"value": "han 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3671:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3683:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3694:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3679:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3671:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3454:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3468:4:1",
														"type": ""
													}
												],
												"src": "3303:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3883:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3900:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3911:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3893:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3934:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3945:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3930:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3930:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3950:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3923:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3923:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3923:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3973:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3984:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3969:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3969:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3989:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3962:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3962:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4044:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4055:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4040:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4060:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4033:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4078:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4090:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4101:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4086:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4078:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3860:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3874:4:1",
														"type": ""
													}
												],
												"src": "3709:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4290:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4307:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4318:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4300:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4300:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4341:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4352:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4337:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4337:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4357:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4330:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4330:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4330:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4380:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4391:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4376:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4376:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4396:17:1",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4369:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4369:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4369:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4423:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4435:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4446:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4423:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4267:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4281:4:1",
														"type": ""
													}
												],
												"src": "4116:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4634:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4651:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4662:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4644:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4644:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4644:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4696:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4681:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4701:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4674:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4724:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4735:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4720:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4720:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4740:22:1",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4713:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4713:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4713:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4772:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4784:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4795:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4780:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4780:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4772:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4611:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4625:4:1",
														"type": ""
													}
												],
												"src": "4460:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4983:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5000:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5011:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4993:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4993:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5034:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5045:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5030:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5030:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5050:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5023:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5023:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5023:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5073:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5084:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5069:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5069:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5089:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5062:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5062:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5062:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5117:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5129:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5140:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5125:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5125:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5117:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4960:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4974:4:1",
														"type": ""
													}
												],
												"src": "4809:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5328:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5345:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5356:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5338:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5338:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5375:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5395:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5368:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5368:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5368:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5418:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5429:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5414:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5434:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5407:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5407:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5478:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5490:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5501:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5486:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5486:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5478:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5305:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5319:4:1",
														"type": ""
													}
												],
												"src": "5154:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5689:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5706:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5717:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5699:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5699:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5740:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5736:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5736:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5756:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5729:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5729:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5779:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5790:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5775:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5795:31:1",
																		"type": "",
																		"value": "New owner is the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5768:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5768:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5768:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5836:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5848:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5859:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5844:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5836:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5666:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5680:4:1",
														"type": ""
													}
												],
												"src": "5515:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6047:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6064:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6075:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6057:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6057:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6109:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6094:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6114:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6087:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6137:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6148:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6133:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6153:34:1",
																		"type": "",
																		"value": "Withdrawal amount must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6126:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6126:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6126:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6208:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6219:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6204:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6204:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6224:10:1",
																		"type": "",
																		"value": "r than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6197:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6197:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6244:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6256:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6267:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6252:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6244:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2bb57ccc52aba6a10ce9e730f975161407a749f2470540e34f0d522d5352045__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6024:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6038:4:1",
														"type": ""
													}
												],
												"src": "5873:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6456:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6473:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6484:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6466:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6466:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6507:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6518:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6503:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6523:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6496:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6496:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6496:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6546:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6557:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6542:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6562:22:1",
																		"type": "",
																		"value": "Not enough allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6535:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6535:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6594:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6606:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6617:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6602:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6602:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6594:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6433:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6447:4:1",
														"type": ""
													}
												],
												"src": "6282:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6805:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6822:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6833:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6815:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6856:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6867:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6852:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6872:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6845:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6845:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6895:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6906:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6891:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6891:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6911:27:1",
																		"type": "",
																		"value": "Exceeds maximum allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6884:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6884:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6884:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6948:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6960:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6971:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6956:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6948:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b920763e9c4fc25107c5d08e4f48dc2f6cd7a3bd17287c9494a893e22774edba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6782:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6796:4:1",
														"type": ""
													}
												],
												"src": "6631:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7159:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7176:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7187:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7169:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7169:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7169:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7221:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7206:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7226:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7199:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7199:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7249:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7260:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7245:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7265:28:1",
																		"type": "",
																		"value": "Invalid withdrawal address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7238:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7238:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7303:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7315:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7326:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7311:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7311:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7303:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cfedf5f110596e524ef98520d82fcd7477f7355fb570fb0b7b31726b2b437dcb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7136:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7150:4:1",
														"type": ""
													}
												],
												"src": "6985:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7514:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7531:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7542:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7524:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7524:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7524:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7565:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7576:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7561:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7581:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7554:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7554:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7604:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7615:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7600:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7620:34:1",
																		"type": "",
																		"value": "Transfer to Liquidity Pool faile"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7593:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7593:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7675:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7686:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7671:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7691:3:1",
																		"type": "",
																		"value": "d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7664:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7704:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7716:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7727:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7712:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7712:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7704:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd554f9385562280007386b29c790fe9fc7c44731c54e129e1cb06725e34fe0b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7491:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7505:4:1",
														"type": ""
													}
												],
												"src": "7340:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7916:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7933:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7944:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7926:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7967:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7978:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7963:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7963:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7983:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7956:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7956:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7956:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8006:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8017:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8002:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8022:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7995:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7995:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8065:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8077:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8088:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8073:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8073:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8065:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7893:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7907:4:1",
														"type": ""
													}
												],
												"src": "7742:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8213:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8225:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8213:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8255:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8266:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8248:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8248:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8172:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8183:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8194:4:1",
														"type": ""
													}
												],
												"src": "8102:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8333:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8363:117:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "diff",
																					"nodeType": "YulIdentifier",
																					"src": "8384:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8394:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8399:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8390:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8390:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8377:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8377:34:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8377:34:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8431:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8434:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8424:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8424:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "diff",
																					"nodeType": "YulIdentifier",
																					"src": "8459:4:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8465:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8452:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8452:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8452:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8349:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8352:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8346:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8346:8:1"
															},
															"nodeType": "YulIf",
															"src": "8343:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8489:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8501:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8504:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8497:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8489:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8315:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8318:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8324:4:1",
														"type": ""
													}
												],
												"src": "8284:228:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$379__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Deposit amount must be greater t\")\n        mstore(add(headStart, 96), \"han 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"New owner is the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2bb57ccc52aba6a10ce9e730f975161407a749f2470540e34f0d522d5352045__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Withdrawal amount must be greate\")\n        mstore(add(headStart, 96), \"r than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not enough allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b920763e9c4fc25107c5d08e4f48dc2f6cd7a3bd17287c9494a893e22774edba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Exceeds maximum allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cfedf5f110596e524ef98520d82fcd7477f7355fb570fb0b7b31726b2b437dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid withdrawal address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dd554f9385562280007386b29c790fe9fc7c44731c54e129e1cb06725e34fe0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Transfer to Liquidity Pool faile\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c80638456cb5911610097578063c4da924711610066578063c4da9247146101b8578063d25b17b6146101cb578063dee3b50f146101d3578063f2fde38b146101db57610100565b80638456cb591461018b5780638da5cb5b14610193578063996c6cc3146101a8578063bb413c8d146101b057610100565b80635c975abb116100d35780635c975abb1461015357806362c35c011461016857806364f00f011461017b578063715018a61461018357610100565b80633f4ba83a146101055780634abb3fac1461010f57806356d96a991461012d5780635a6b26ba14610140575b600080fd5b61010d6101ee565b005b610117610200565b6040516101249190610f03565b60405180910390f35b61010d61013b366004610b5b565b610206565b61010d61014e366004610b12565b61024e565b61015b610440565b6040516101249190610bf6565b61010d610176366004610b5b565b610449565b610117610544565b61010d61054a565b61010d61055c565b61019b61056c565b6040516101249190610b8b565b61019b61057b565b61011761058a565b61010d6101c6366004610b5b565b610590565b61019b610755565b61010d610769565b61010d6101e9366004610af1565b610794565b6101f66107ce565b6101fe61080d565b565b60055481565b61020e6107ce565b60068190556040517f3a25092a4d85e75d6b227fd7cc0f982fb0fbbe013db22c0f7c75112e523a4df190610243908390610f03565b60405180910390a150565b6102566107ce565b61025e61085f565b610266610889565b6001600160a01b0382166102955760405162461bcd60e51b815260040161028c90610e54565b60405180910390fd5b600081116102b55760405162461bcd60e51b815260040161028c90610da7565b6003546040516370a0823160e01b815282916001600160a01b0316906370a08231906102e5903090600401610b8b565b60206040518083038186803b1580156102fd57600080fd5b505afa158015610311573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103359190610b73565b10156103535760405162461bcd60e51b815260040161028c90610ce3565b60035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906103859085908590600401610bdd565b602060405180830381600087803b15801561039f57600080fd5b505af11580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d79190610b3b565b6103f35760405162461bcd60e51b815260040161028c90610cba565b816001600160a01b03167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b8260405161042c9190610f03565b60405180910390a261043c6108ae565b5050565b60025460ff1690565b6104516107ce565b610459610889565b60065481111561047b5760405162461bcd60e51b815260040161028c90610e1d565b60035460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906104ad9030908590600401610bdd565b602060405180830381600087803b1580156104c757600080fd5b505af11580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190610b3b565b50336001600160a01b03167f5f327dfbc26b4773c8990edbc20356f43975e2a38466359fad3bd2b77dee2433826040516105399190610f03565b60405180910390a250565b60065481565b6105526107ce565b6101fe60006108b4565b6105646107ce565b6101fe610904565b6000546001600160a01b031690565b6003546001600160a01b031681565b60045481565b610598610889565b600081116105b85760405162461bcd60e51b815260040161028c90610c2f565b600354604051636eb1769f60e11b815282916001600160a01b03169063dd62ed3e906105ea9033903090600401610b9f565b60206040518083038186803b15801561060257600080fd5b505afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190610b73565b10156106585760405162461bcd60e51b815260040161028c90610def565b6003546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061068c90339030908690600401610bb9565b602060405180830381600087803b1580156106a657600080fd5b505af11580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106de9190610b3b565b6106fa5760405162461bcd60e51b815260040161028c90610cba565b60055460045461070a9043610f0c565b1061071c57610717610942565b436004555b336001600160a01b03167f59062170a285eb80e8c6b8ced60428442a51910635005233fc4ce084a475845e826040516105399190610f03565b60025461010090046001600160a01b031681565b610771610889565b6005546004546107819043610f0c565b106101fe5761078e610942565b43600455565b61079c6107ce565b6001600160a01b0381166107c25760405162461bcd60e51b815260040161028c90610d70565b6107cb81610a76565b50565b6107d6610aad565b6001600160a01b03166107e761056c565b6001600160a01b0316146101fe5760405162461bcd60e51b815260040161028c90610d3b565b610815610ab1565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610848610aad565b6040516108559190610b8b565b60405180910390a1565b600260015414156108825760405162461bcd60e51b815260040161028c90610ecc565b6002600155565b610891610440565b156101fe5760405162461bcd60e51b815260040161028c90610d11565b60018055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61090c610889565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610848610aad565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610973903090600401610b8b565b60206040518083038186803b15801561098b57600080fd5b505afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c39190610b73565b905080156107cb5760035460025460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92610a0892610100909104909116908590600401610bdd565b602060405180830381600087803b158015610a2257600080fd5b505af1158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190610b3b565b6107cb5760405162461bcd60e51b815260040161028c90610e8b565b610a7e6107ce565b6001600160a01b038116610aa45760405162461bcd60e51b815260040161028c90610c74565b6107cb816108b4565b3390565b610ab9610440565b6101fe5760405162461bcd60e51b815260040161028c90610c01565b80356001600160a01b0381168114610aec57600080fd5b919050565b600060208284031215610b02578081fd5b610b0b82610ad5565b9392505050565b60008060408385031215610b24578081fd5b610b2d83610ad5565b946020939093013593505050565b600060208284031215610b4c578081fd5b81518015158114610b0b578182fd5b600060208284031215610b6c578081fd5b5035919050565b600060208284031215610b84578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526025908201527f4465706f73697420616d6f756e74206d75737420626520677265617465722074604082015264068616e20360dc1b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604082015260600190565b60208082526028908201527f5769746864726177616c20616d6f756e74206d75737420626520677265617465604082015267072207468616e20360c41b606082015260800190565b6020808252601490820152734e6f7420656e6f75676820616c6c6f77616e636560601b604082015260600190565b60208082526019908201527f45786365656473206d6178696d756d20616c6c6f77616e636500000000000000604082015260600190565b6020808252601a908201527f496e76616c6964207769746864726177616c2061646472657373000000000000604082015260600190565b60208082526021908201527f5472616e7366657220746f204c697175696469747920506f6f6c206661696c656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b600082821015610f2a57634e487b7160e01b81526011600452602481fd5b50039056fea26469706673582212200a1baf4e7a5b0045311481fcb37b18a3d787433354257f400db322e9393527e664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC4DA9247 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC4DA9247 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xD25B17B6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xDEE3B50F EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DB JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x996C6CC3 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xBB413C8D EQ PUSH2 0x1B0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x62C35C01 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x64F00F01 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x183 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x4ABB3FAC EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x56D96A99 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x5A6B26BA EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x1EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST PUSH2 0x15B PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x117 PUSH2 0x544 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x54A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x55C JUMP JUMPDEST PUSH2 0x19B PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x19B PUSH2 0x57B JUMP JUMPDEST PUSH2 0x117 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x755 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x769 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x80D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3A25092A4D85E75D6B227FD7CC0F982FB0FBBE013DB22C0F7C75112E523A4DF1 SWAP1 PUSH2 0x243 SWAP1 DUP4 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x256 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x25E PUSH2 0x85F JUMP JUMPDEST PUSH2 0x266 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x295 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2E5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x311 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST LT ISZERO PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x385 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xCBA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B DUP3 PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x43C PUSH2 0x8AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x451 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x459 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 GT ISZERO PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0x4AD SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5F327DFBC26B4773C8990EDBC20356F43975E2A38466359FAD3BD2B77DEE2433 DUP3 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x552 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x1FE PUSH1 0x0 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x564 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x904 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x598 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x5EA SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x616 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST LT ISZERO PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x68C SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DE SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x70A SWAP1 NUMBER PUSH2 0xF0C JUMP JUMPDEST LT PUSH2 0x71C JUMPI PUSH2 0x717 PUSH2 0x942 JUMP JUMPDEST NUMBER PUSH1 0x4 SSTORE JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x59062170A285EB80E8C6B8CED60428442A51910635005233FC4CE084A475845E DUP3 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x771 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x781 SWAP1 NUMBER PUSH2 0xF0C JUMP JUMPDEST LT PUSH2 0x1FE JUMPI PUSH2 0x78E PUSH2 0x942 JUMP JUMPDEST NUMBER PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x79C PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0xA76 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7D6 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7E7 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x815 PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x848 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x855 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x891 PUSH2 0x440 JUMP JUMPDEST ISZERO PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x90C PUSH2 0x889 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x848 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x973 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x7CB JUMPI PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xA08 SWAP3 PUSH2 0x100 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0xA7E PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0x8B4 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0xAB9 PUSH2 0x440 JUMP JUMPDEST PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28C SWAP1 PUSH2 0xC01 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB02 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB0B DUP3 PUSH2 0xAD5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB24 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB2D DUP4 PUSH2 0xAD5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB0B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB84 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6577206F776E657220697320746865207A65726F2061646472657373000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x72207468616E203 PUSH1 0xC4 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F75676820616C6C6F77616E6365 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178696D756D20616C6C6F77616E636500000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207769746864726177616C2061646472657373000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220746F204C697175696469747920506F6F6C206661696C65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SHL 0xAF 0x4E PUSH27 0x5B0045311481FCB37B18A3D787433354257F400DB322E9393527E6 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "12288:4027:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15252:65;;;:::i;:::-;;12472:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16146:167;;;;;;:::i;:::-;;:::i;14464:514::-;;;;;;:::i;:::-;;:::i;5795:84::-;;;:::i;:::-;;;;;;;:::i;14129:329::-;;;;;;:::i;:::-;;:::i;12515:27::-;;;:::i;8602:101::-;;;:::i;15185:61::-;;;:::i;7979:85::-;;;:::i;:::-;;;;;;;:::i;12406:26::-;;;:::i;12439:27::-;;;:::i;13288:835::-;;;;;;:::i;:::-;;:::i;12365:35::-;;;:::i;15323:362::-;;;:::i;14984:195::-;;;;;;:::i;:::-;;:::i;15252:65::-;7872:13;:11;:13::i;:::-;15300:10:::1;:8;:10::i;:::-;15252:65::o:0;12472:37::-;;;;:::o;16146:167::-;7872:13;:11;:13::i;:::-;16225:12:::1;:30:::0;;;16270:36:::1;::::0;::::1;::::0;::::1;::::0;16240:15;;16270:36:::1;:::i;:::-;;;;;;;;16146:167:::0;:::o;14464:514::-;7872:13;:11;:13::i;:::-;2347:21:::1;:19;:21::i;:::-;5419:19:::2;:17;:19::i;:::-;-1:-1:-1::0;;;;;14576:16:0;::::3;14568:55;;;;-1:-1:-1::0;;;14568:55:0::3;;;;;;;:::i;:::-;;;;;;;;;14650:1;14641:6;:10;14633:63;;;;-1:-1:-1::0;;;14633:63:0::3;;;;;;;:::i;:::-;14714:12;::::0;:37:::3;::::0;-1:-1:-1;;;14714:37:0;;14755:6;;-1:-1:-1;;;;;14714:12:0::3;::::0;:22:::3;::::0;:37:::3;::::0;14745:4:::3;::::0;14714:37:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;14706:80;;;;-1:-1:-1::0;;;14706:80:0::3;;;;;;;:::i;:::-;14875:12;::::0;:33:::3;::::0;-1:-1:-1;;;14875:33:0;;-1:-1:-1;;;;;14875:12:0;;::::3;::::0;:21:::3;::::0;:33:::3;::::0;14897:2;;14901:6;;14875:33:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14867:61;;;;-1:-1:-1::0;;;14867:61:0::3;;;;;;;:::i;:::-;14960:2;-1:-1:-1::0;;;;;14944:27:0::3;;14964:6;14944:27;;;;;;:::i;:::-;;;;;;;;2389:20:::1;:18;:20::i;:::-;14464:514:::0;;:::o;5795:84::-;5865:7;;;;5795:84;:::o;14129:329::-;7872:13;:11;:13::i;:::-;5419:19:::1;:17;:19::i;:::-;14304:12:::2;;14294:6;:22;;14286:60;;;;-1:-1:-1::0;;;14286:60:0::2;;;;;;;:::i;:::-;14356:12;::::0;:43:::2;::::0;-1:-1:-1;;;14356:43:0;;-1:-1:-1;;;;;14356:12:0;;::::2;::::0;:20:::2;::::0;:43:::2;::::0;14385:4:::2;::::0;14392:6;;14356:43:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14432:10;-1:-1:-1::0;;;;;14415:36:0::2;;14444:6;14415:36;;;;;;:::i;:::-;;;;;;;;14129:329:::0;:::o;12515:27::-;;;;:::o;8602:101::-;7872:13;:11;:13::i;:::-;8666:30:::1;8693:1;8666:18;:30::i;15185:61::-:0;7872:13;:11;:13::i;:::-;15231:8:::1;:6;:8::i;7979:85::-:0;8025:7;8051:6;-1:-1:-1;;;;;8051:6:0;7979:85;:::o;12406:26::-;;;-1:-1:-1;;;;;12406:26:0;;:::o;12439:27::-;;;;:::o;13288:835::-;5419:19;:17;:19::i;:::-;13382:1:::1;13373:6;:10;13365:60;;;;-1:-1:-1::0;;;13365:60:0::1;;;;;;;:::i;:::-;13530:12;::::0;:49:::1;::::0;-1:-1:-1;;;13530:49:0;;13583:6;;-1:-1:-1;;;;;13530:12:0::1;::::0;:22:::1;::::0;:49:::1;::::0;13553:10:::1;::::0;13573:4:::1;::::0;13530:49:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;13522:92;;;;-1:-1:-1::0;;;13522:92:0::1;;;;;;;:::i;:::-;13689:12;::::0;:60:::1;::::0;-1:-1:-1;;;13689:60:0;;-1:-1:-1;;;;;13689:12:0;;::::1;::::0;:25:::1;::::0;:60:::1;::::0;13715:10:::1;::::0;13735:4:::1;::::0;13742:6;;13689:60:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13681:88;;;;-1:-1:-1::0;;;13681:88:0::1;;;;;;;:::i;:::-;13911:16;::::0;13895:12:::1;::::0;13880:27:::1;::::0;:12:::1;:27;:::i;:::-;:47;13876:190;;13943:32;:30;:32::i;:::-;14043:12;14028;:27:::0;13876:190:::1;14097:10;-1:-1:-1::0;;;;;14081:35:0::1;;14109:6;14081:35;;;;;;:::i;12365:::-:0;;;;;;-1:-1:-1;;;;;12365:35:0;;:::o;15323:362::-;5419:19;:17;:19::i;:::-;15524:16:::1;::::0;15508:12:::1;::::0;15493:27:::1;::::0;:12:::1;:27;:::i;:::-;:47;15489:190;;15556:32;:30;:32::i;:::-;15656:12;15641;:27:::0;15323:362::o;14984:195::-;7872:13;:11;:13::i;:::-;-1:-1:-1;;;;;15073:22:0;::::1;15065:64;;;;-1:-1:-1::0;;;15065:64:0::1;;;;;;;:::i;:::-;15139:33;15163:8;15139:23;:33::i;:::-;14984:195:::0;:::o;8137:130::-;8211:12;:10;:12::i;:::-;-1:-1:-1;;;;;8200:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;8200:23:0;;8192:68;;;;-1:-1:-1;;;8192:68:0;;;;;;;:::i;6613:117::-;5666:16;:14;:16::i;:::-;6671:7:::1;:15:::0;;-1:-1:-1;;6671:15:0::1;::::0;;6701:22:::1;6710:12;:10;:12::i;:::-;6701:22;;;;;;:::i;:::-;;;;;;;;6613:117::o:0;2422:287::-;1845:1;2554:7;;:19;;2546:63;;;;-1:-1:-1;;;2546:63:0;;;;;;;:::i;:::-;1845:1;2684:7;:18;2422:287::o;5947:106::-;6017:8;:6;:8::i;:::-;6016:9;6008:38;;;;-1:-1:-1;;;6008:38:0;;;;;;;:::i;2715:209::-;1802:1;2895:22;;2715:209::o;9204:187::-;9277:16;9296:6;;-1:-1:-1;;;;;9312:17:0;;;-1:-1:-1;;;;;;9312:17:0;;;;;;9344:40;;9296:6;;;;;;;9344:40;;9277:16;9344:40;9204:187;;:::o;6366:115::-;5419:19;:17;:19::i;:::-;6425:7:::1;:14:::0;;-1:-1:-1;;6425:14:0::1;6435:4;6425:14;::::0;;6454:20:::1;6461:12;:10;:12::i;15762:378::-:0;15931:12;;:37;;-1:-1:-1;;;15931:37:0;;15905:23;;-1:-1:-1;;;;;15931:12:0;;:22;;:37;;15962:4;;15931:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15905:63;-1:-1:-1;15982:19:0;;15978:156;;16025:12;;16047:20;;16025:60;;-1:-1:-1;;;16025:60:0;;-1:-1:-1;;;;;16025:12:0;;;;:21;;:60;;:12;16047:20;;;;;;;16069:15;;16025:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16017:106;;;;-1:-1:-1;;;16017:106:0;;;;;;;:::i;8852:198::-;7872:13;:11;:13::i;:::-;-1:-1:-1;;;;;8940:22:0;::::1;8932:73;;;;-1:-1:-1::0;;;8932:73:0::1;;;;;;;:::i;:::-;9015:28;9034:8;9015:18;:28::i;3928:96::-:0;4007:10;3928:96;:::o;6125:106::-;6191:8;:6;:8::i;:::-;6183:41;;;;-1:-1:-1;;;6183:41:0;;;;;;;:::i;14:175:1:-;84:20;;-1:-1:-1;;;;;133:31:1;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:1:o;397:266::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;653:2;638:18;;;;625:32;;-1:-1:-1;;;484:179:1:o;668:297::-;;788:2;776:9;767:7;763:23;759:32;756:2;;;809:6;801;794:22;756:2;846:9;840:16;899:5;892:13;885:21;878:5;875:32;865:2;;926:6;918;911:22;970:190;;1082:2;1070:9;1061:7;1057:23;1053:32;1050:2;;;1103:6;1095;1088:22;1050:2;-1:-1:-1;1131:23:1;;1040:120;-1:-1:-1;1040:120:1:o;1165:194::-;;1288:2;1276:9;1267:7;1263:23;1259:32;1256:2;;;1309:6;1301;1294:22;1256:2;-1:-1:-1;1337:16:1;;1246:113;-1:-1:-1;1246:113:1:o;1364:203::-;-1:-1:-1;;;;;1528:32:1;;;;1510:51;;1498:2;1483:18;;1465:102::o;1572:304::-;-1:-1:-1;;;;;1802:15:1;;;1784:34;;1854:15;;1849:2;1834:18;;1827:43;1734:2;1719:18;;1701:175::o;1881:375::-;-1:-1:-1;;;;;2139:15:1;;;2121:34;;2191:15;;;;2186:2;2171:18;;2164:43;2238:2;2223:18;;2216:34;;;;2071:2;2056:18;;2038:218::o;2261:274::-;-1:-1:-1;;;;;2453:32:1;;;;2435:51;;2517:2;2502:18;;2495:34;2423:2;2408:18;;2390:145::o;2540:187::-;2705:14;;2698:22;2680:41;;2668:2;2653:18;;2635:92::o;2954:344::-;3156:2;3138:21;;;3195:2;3175:18;;;3168:30;-1:-1:-1;;;3229:2:1;3214:18;;3207:50;3289:2;3274:18;;3128:170::o;3303:401::-;3505:2;3487:21;;;3544:2;3524:18;;;3517:30;3583:34;3578:2;3563:18;;3556:62;-1:-1:-1;;;3649:2:1;3634:18;;3627:35;3694:3;3679:19;;3477:227::o;3709:402::-;3911:2;3893:21;;;3950:2;3930:18;;;3923:30;3989:34;3984:2;3969:18;;3962:62;-1:-1:-1;;;4055:2:1;4040:18;;4033:36;4101:3;4086:19;;3883:228::o;4116:339::-;4318:2;4300:21;;;4357:2;4337:18;;;4330:30;-1:-1:-1;;;4391:2:1;4376:18;;4369:45;4446:2;4431:18;;4290:165::o;4460:344::-;4662:2;4644:21;;;4701:2;4681:18;;;4674:30;-1:-1:-1;;;4735:2:1;4720:18;;4713:50;4795:2;4780:18;;4634:170::o;4809:340::-;5011:2;4993:21;;;5050:2;5030:18;;;5023:30;-1:-1:-1;;;5084:2:1;5069:18;;5062:46;5140:2;5125:18;;4983:166::o;5154:356::-;5356:2;5338:21;;;5375:18;;;5368:30;5434:34;5429:2;5414:18;;5407:62;5501:2;5486:18;;5328:182::o;5515:353::-;5717:2;5699:21;;;5756:2;5736:18;;;5729:30;5795:31;5790:2;5775:18;;5768:59;5859:2;5844:18;;5689:179::o;5873:404::-;6075:2;6057:21;;;6114:2;6094:18;;;6087:30;6153:34;6148:2;6133:18;;6126:62;-1:-1:-1;;;6219:2:1;6204:18;;6197:38;6267:3;6252:19;;6047:230::o;6282:344::-;6484:2;6466:21;;;6523:2;6503:18;;;6496:30;-1:-1:-1;;;6557:2:1;6542:18;;6535:50;6617:2;6602:18;;6456:170::o;6631:349::-;6833:2;6815:21;;;6872:2;6852:18;;;6845:30;6911:27;6906:2;6891:18;;6884:55;6971:2;6956:18;;6805:175::o;6985:350::-;7187:2;7169:21;;;7226:2;7206:18;;;7199:30;7265:28;7260:2;7245:18;;7238:56;7326:2;7311:18;;7159:176::o;7340:397::-;7542:2;7524:21;;;7581:2;7561:18;;;7554:30;7620:34;7615:2;7600:18;;7593:62;-1:-1:-1;;;7686:2:1;7671:18;;7664:31;7727:3;7712:19;;7514:223::o;7742:355::-;7944:2;7926:21;;;7983:2;7963:18;;;7956:30;8022:33;8017:2;8002:18;;7995:61;8088:2;8073:18;;7916:181::o;8102:177::-;8248:25;;;8236:2;8221:18;;8203:76::o;8284:228::-;;8352:1;8349;8346:8;8343:2;;;-1:-1:-1;;;8377:34:1;;8434:4;8431:1;8424:15;8465:4;8384;8452:18;8343:2;-1:-1:-1;8497:9:1;;8333:179::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "788200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approveContract(uint256)": "infinite",
								"automatedWithdrawalToPool()": "infinite",
								"blockCounter()": "1117",
								"depositAndTransfer(uint256)": "infinite",
								"liquidityPoolAddress()": "1125",
								"maxAllowance()": "1095",
								"owner()": "1115",
								"pause()": "infinite",
								"paused()": "1063",
								"renounceOwnership()": "infinite",
								"setMaxAllowance(uint256)": "22347",
								"transferInterval()": "1074",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"withdrawal(address,uint256)": "infinite",
								"wrappedToken()": "1137"
							},
							"internal": {
								"executeTransferToLiquidityPool()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12288,
									"end": 16315,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 12288,
									"end": 16315,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12288,
									"end": 16315,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12506,
									"end": 12509,
									"name": "PUSH",
									"source": 0,
									"value": "C8"
								},
								{
									"begin": 12472,
									"end": 12509,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12472,
									"end": 12509,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12802,
									"end": 13282,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7714,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7733,
									"end": 7745,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7733,
									"end": 7743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7733,
									"end": 7745,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7733,
									"end": 7745,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7733,
									"end": 7745,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7714,
									"end": 7732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7714,
									"end": 7746,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7714,
									"end": 7746,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7714,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1802,
									"end": 1803,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1907,
									"end": 1929,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1907,
									"end": 1929,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5176,
									"end": 5183,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5176,
									"end": 5191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5176,
									"end": 5191,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5176,
									"end": 5191,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5176,
									"end": 5191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5176,
									"end": 5191,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12909,
									"end": 12944,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12909,
									"end": 12944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 12901,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12997,
									"end": 13024,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12997,
									"end": 13024,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 12989,
									"end": 13058,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13069,
									"end": 13089,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13069,
									"end": 13113,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13069,
									"end": 13113,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13069,
									"end": 13113,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13069,
									"end": 13113,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13069,
									"end": 13113,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 13069,
									"end": 13113,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 13069,
									"end": 13113,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13069,
									"end": 13113,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13069,
									"end": 13113,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13069,
									"end": 13113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13069,
									"end": 13113,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13135,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13123,
									"end": 13159,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13169,
									"end": 13181,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13169,
									"end": 13197,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13263,
									"end": 13275,
									"name": "NUMBER",
									"source": 0
								},
								{
									"begin": 13248,
									"end": 13260,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13248,
									"end": 13275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12288,
									"end": 16315,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 12288,
									"end": 16315,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3928,
									"end": 4024,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3928,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4007,
									"end": 4017,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3928,
									"end": 4024,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3928,
									"end": 4024,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 9204,
									"end": 9391,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 9204,
									"end": 9391,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9277,
									"end": 9293,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9296,
									"end": 9302,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9296,
									"end": 9302,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9312,
									"end": 9329,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9312,
									"end": 9329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9312,
									"end": 9329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9312,
									"end": 9329,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9312,
									"end": 9329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9312,
									"end": 9329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9312,
									"end": 9329,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9312,
									"end": 9329,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 9312,
									"end": 9329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9344,
									"end": 9384,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9344,
									"end": 9384,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9296,
									"end": 9302,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9296,
									"end": 9302,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9296,
									"end": 9302,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 9296,
									"end": 9302,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9296,
									"end": 9302,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 9296,
									"end": 9302,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9296,
									"end": 9302,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9344,
									"end": 9384,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9344,
									"end": 9384,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9277,
									"end": 9293,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9344,
									"end": 9384,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 9204,
									"end": 9391,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9204,
									"end": 9391,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9204,
									"end": 9391,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 193,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 14,
									"end": 193,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 95,
									"end": 108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 127,
									"end": 169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 127,
									"end": 169,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 117,
									"end": 119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 183,
									"end": 184,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 181,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 173,
									"end": 185,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 117,
									"end": 119,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 198,
									"end": 566,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 198,
									"end": 566,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 198,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 566,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 198,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 357,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 343,
									"end": 352,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 334,
									"end": 341,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 330,
									"end": 353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 326,
									"end": 358,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 323,
									"end": 325,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 323,
									"end": 325,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 323,
									"end": 325,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 376,
									"end": 382,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 368,
									"end": 374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 361,
									"end": 383,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 323,
									"end": 325,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 323,
									"end": 325,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 404,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 436,
									"end": 445,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 404,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 404,
									"end": 446,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 404,
									"end": 446,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 404,
									"end": 446,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 394,
									"end": 446,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 394,
									"end": 446,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 465,
									"end": 516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 512,
									"end": 514,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 501,
									"end": 510,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 497,
									"end": 515,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 465,
									"end": 516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 465,
									"end": 516,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 465,
									"end": 516,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 465,
									"end": 516,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 455,
									"end": 516,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 455,
									"end": 516,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 545,
									"end": 554,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 541,
									"end": 559,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 535,
									"end": 560,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 525,
									"end": 560,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 525,
									"end": 560,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 313,
									"end": 566,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 313,
									"end": 566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 313,
									"end": 566,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 313,
									"end": 566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 313,
									"end": 566,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 313,
									"end": 566,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 571,
									"end": 924,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 571,
									"end": 924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 773,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 755,
									"end": 776,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 755,
									"end": 776,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 812,
									"end": 814,
									"name": "PUSH",
									"source": 1,
									"value": "1D"
								},
								{
									"begin": 792,
									"end": 810,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 792,
									"end": 810,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 810,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 785,
									"end": 815,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 851,
									"end": 882,
									"name": "PUSH",
									"source": 1,
									"value": "496E76616C6964207772617070656420746F6B656E2061646472657373000000"
								},
								{
									"begin": 846,
									"end": 848,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 831,
									"end": 849,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 831,
									"end": 849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 883,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 915,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 745,
									"end": 924,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 929,
									"end": 1283,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 929,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1113,
									"end": 1134,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1134,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1172,
									"name": "PUSH",
									"source": 1,
									"value": "1E"
								},
								{
									"begin": 1150,
									"end": 1168,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1150,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1150,
									"end": 1168,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1143,
									"end": 1173,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1209,
									"end": 1241,
									"name": "PUSH",
									"source": 1,
									"value": "496E76616C6964204C697175696469747920506F6F6C20616464726573730000"
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1189,
									"end": 1207,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1189,
									"end": 1207,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1182,
									"end": 1242,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1274,
									"end": 1276,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1259,
									"end": 1277,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1277,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1103,
									"end": 1283,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1103,
									"end": 1283,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1103,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12288,
									"end": 16315,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12288,
									"end": 16315,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12288,
									"end": 16315,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12288,
									"end": 16315,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12288,
									"end": 16315,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12288,
									"end": 16315,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12288,
									"end": 16315,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200a1baf4e7a5b0045311481fcb37b18a3d787433354257f400db322e9393527e664736f6c63430008000033",
									".code": [
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "C4DA9247"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "C4DA9247"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "D25B17B6"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "DEE3B50F"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "996C6CC3"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "BB413C8D"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "62C35C01"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "64F00F01"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "4ABB3FAC"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "56D96A99"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "5A6B26BA"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 16315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15317,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15252,
											"end": 15317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15252,
											"end": 15317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15252,
											"end": 15317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15252,
											"end": 15317,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15252,
											"end": 15317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15317,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12515,
											"end": 12542,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12515,
											"end": 12542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12515,
											"end": 12542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12515,
											"end": 12542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12515,
											"end": 12542,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8602,
											"end": 8703,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8602,
											"end": 8703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8602,
											"end": 8703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8602,
											"end": 8703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8602,
											"end": 8703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15185,
											"end": 15246,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15185,
											"end": 15246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15185,
											"end": 15246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15185,
											"end": 15246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12439,
											"end": 12466,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12439,
											"end": 12466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12439,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12439,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 12439,
											"end": 12466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15323,
											"end": 15685,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15323,
											"end": 15685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 15685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15323,
											"end": 15685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 15323,
											"end": 15685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15252,
											"end": 15317,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15252,
											"end": 15317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15300,
											"end": 15310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15300,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15300,
											"end": 15310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15300,
											"end": 15310,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15300,
											"end": 15310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15252,
											"end": 15317,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12509,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16237,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16225,
											"end": 16255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16225,
											"end": 16255,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "PUSH",
											"source": 0,
											"value": "3A25092A4D85E75D6B227FD7CC0F982FB0FBBE013DB22C0F7C75112E523A4DF1"
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16270,
											"end": 16306,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16313,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2347,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2347,
											"end": 2368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2347,
											"end": 2368,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2347,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14576,
											"end": 14592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14568,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14650,
											"end": 14651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14641,
											"end": 14647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14651,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14633,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14726,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14714,
											"end": 14726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14755,
											"end": 14761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14755,
											"end": 14761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14714,
											"end": 14726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14736,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 14714,
											"end": 14736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14745,
											"end": 14749,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14745,
											"end": 14749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14714,
											"end": 14751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14714,
											"end": 14761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14706,
											"end": 14786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14887,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14875,
											"end": 14887,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14875,
											"end": 14887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14896,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 14875,
											"end": 14896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14897,
											"end": 14899,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14897,
											"end": 14899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14901,
											"end": 14907,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14901,
											"end": 14907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14875,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14867,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14960,
											"end": 14962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "PUSH",
											"source": 0,
											"value": "6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B"
										},
										{
											"begin": 14964,
											"end": 14970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14971,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2389,
											"end": 2409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2389,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14978,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5879,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14304,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14304,
											"end": 14316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14294,
											"end": 14300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14294,
											"end": 14316,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14294,
											"end": 14316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14368,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14356,
											"end": 14368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14356,
											"end": 14368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14376,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 14356,
											"end": 14376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14389,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14392,
											"end": 14398,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14392,
											"end": 14398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14442,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "PUSH",
											"source": 0,
											"value": "5F327DFBC26B4773C8990EDBC20356F43975E2A38466359FAD3BD2B77DEE2433"
										},
										{
											"begin": 14444,
											"end": 14450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14451,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14458,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12515,
											"end": 12542,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12515,
											"end": 12542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12515,
											"end": 12542,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12515,
											"end": 12542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12515,
											"end": 12542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12515,
											"end": 12542,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8602,
											"end": 8703,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8602,
											"end": 8703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8666,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8693,
											"end": 8694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8666,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 8666,
											"end": 8696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15185,
											"end": 15246,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15185,
											"end": 15246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15231,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15231,
											"end": 15239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8025,
											"end": 8032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8051,
											"end": 8057,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8051,
											"end": 8057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 8064,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12439,
											"end": 12466,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 12439,
											"end": 12466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12439,
											"end": 12466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12439,
											"end": 12466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12439,
											"end": 12466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12439,
											"end": 12466,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13288,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13373,
											"end": 13379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13373,
											"end": 13383,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13365,
											"end": 13425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13542,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13530,
											"end": 13542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13583,
											"end": 13589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13583,
											"end": 13589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13530,
											"end": 13542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13552,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 13530,
											"end": 13552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13563,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13577,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 13530,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13589,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13522,
											"end": 13614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13701,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13689,
											"end": 13701,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13689,
											"end": 13701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13714,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 13689,
											"end": 13714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13725,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13735,
											"end": 13739,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13735,
											"end": 13739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13748,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 13689,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 13681,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13927,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13911,
											"end": 13927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13895,
											"end": 13907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13895,
											"end": 13907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13880,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 13880,
											"end": 13907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13880,
											"end": 13892,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 13880,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 13880,
											"end": 13907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13880,
											"end": 13907,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 13880,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13880,
											"end": 13927,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13876,
											"end": 14066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 13876,
											"end": 14066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13943,
											"end": 13975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 13943,
											"end": 13973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 13943,
											"end": 13975,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13943,
											"end": 13975,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 13943,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14043,
											"end": 14055,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 14028,
											"end": 14040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14028,
											"end": 14055,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13876,
											"end": 14066,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 13876,
											"end": 14066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14097,
											"end": 14107,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14081,
											"end": 14116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14081,
											"end": 14116,
											"name": "PUSH",
											"source": 0,
											"value": "59062170A285EB80E8C6B8CED60428442A51910635005233FC4CE084A475845E"
										},
										{
											"begin": 14109,
											"end": 14115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14081,
											"end": 14116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14081,
											"end": 14116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14081,
											"end": 14116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14081,
											"end": 14116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14081,
											"end": 14116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14081,
											"end": 14116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14081,
											"end": 14116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12365,
											"end": 12400,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15323,
											"end": 15685,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 15323,
											"end": 15685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15524,
											"end": 15540,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15524,
											"end": 15540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15508,
											"end": 15520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15508,
											"end": 15520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15493,
											"end": 15520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15505,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 15493,
											"end": 15520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15493,
											"end": 15520,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15493,
											"end": 15520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15540,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15489,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15489,
											"end": 15679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15556,
											"end": 15588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 15556,
											"end": 15586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 15556,
											"end": 15588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15556,
											"end": 15588,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 15556,
											"end": 15588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15656,
											"end": 15668,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15641,
											"end": 15668,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15323,
											"end": 15685,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15073,
											"end": 15095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15073,
											"end": 15095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 15065,
											"end": 15129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 15163,
											"end": 15171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 15139,
											"end": 15172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15139,
											"end": 15172,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 15139,
											"end": 15172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14984,
											"end": 15179,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8137,
											"end": 8267,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8137,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8211,
											"end": 8221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 8211,
											"end": 8223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8211,
											"end": 8223,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8211,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8200,
											"end": 8223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8200,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 8200,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8200,
											"end": 8207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8200,
											"end": 8207,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 8200,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8200,
											"end": 8223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8200,
											"end": 8223,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 8192,
											"end": 8260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6613,
											"end": 6730,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6613,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5666,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 5666,
											"end": 5682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5666,
											"end": 5682,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5666,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6671,
											"end": 6686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6671,
											"end": 6686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6686,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 6710,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6710,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6710,
											"end": 6722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6710,
											"end": 6722,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6710,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 6613,
											"end": 6730,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2422,
											"end": 2709,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2422,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2554,
											"end": 2561,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2554,
											"end": 2561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2546,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1846,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2684,
											"end": 2691,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2709,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5947,
											"end": 6053,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5947,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6017,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6017,
											"end": 6025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6017,
											"end": 6025,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6017,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6008,
											"end": 6046,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2715,
											"end": 2924,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2715,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1803,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2895,
											"end": 2917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2917,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2924,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9204,
											"end": 9391,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 9204,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9277,
											"end": 9293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9344,
											"end": 9384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9344,
											"end": 9384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9344,
											"end": 9384,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 9344,
											"end": 9384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9277,
											"end": 9293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9344,
											"end": 9384,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6366,
											"end": 6481,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6366,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 6432,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6425,
											"end": 6439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 6439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6425,
											"end": 6439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6435,
											"end": 6439,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6425,
											"end": 6439,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 6439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 6439,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6454,
											"end": 6474,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 6461,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6461,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6461,
											"end": 6473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15762,
											"end": 16140,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 15762,
											"end": 16140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15943,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15931,
											"end": 15943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15905,
											"end": 15928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15905,
											"end": 15928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15931,
											"end": 15943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15953,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 15931,
											"end": 15953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15962,
											"end": 15966,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15962,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 15931,
											"end": 15968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15905,
											"end": 15968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15982,
											"end": 16001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15982,
											"end": 16001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15978,
											"end": 16134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 15978,
											"end": 16134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16025,
											"end": 16037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16047,
											"end": 16067,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16047,
											"end": 16067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16025,
											"end": 16037,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16037,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16046,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16025,
											"end": 16046,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16047,
											"end": 16067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16047,
											"end": 16067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16047,
											"end": 16067,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16047,
											"end": 16067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16047,
											"end": 16067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16047,
											"end": 16067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16047,
											"end": 16067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16084,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16069,
											"end": 16084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 16025,
											"end": 16085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 16017,
											"end": 16123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8852,
											"end": 9050,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8852,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8940,
											"end": 8962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8940,
											"end": 8962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8932,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9015,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 9034,
											"end": 9042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9015,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 9015,
											"end": 9043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 4024,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3928,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 4024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 4024,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6125,
											"end": 6231,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6125,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6191,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 6191,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6191,
											"end": 6199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6191,
											"end": 6199,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 6191,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 6183,
											"end": 6224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 113,
											"end": 115,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 65,
											"end": 189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 65,
											"end": 189,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 505,
											"end": 512,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 501,
											"end": 524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 497,
											"end": 529,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 554,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 494,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 494,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 575,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 575,
											"end": 606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 565,
											"end": 606,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 625,
											"end": 657,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 625,
											"end": 657,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 484,
											"end": 663,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 965,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 668,
											"end": 965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 767,
											"end": 774,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 763,
											"end": 786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 759,
											"end": 791,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 756,
											"end": 758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 756,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 801,
											"end": 807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 794,
											"end": 816,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 756,
											"end": 758,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 756,
											"end": 758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 840,
											"end": 856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 899,
											"end": 904,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 892,
											"end": 905,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 885,
											"end": 906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 875,
											"end": 907,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 926,
											"end": 932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 918,
											"end": 924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 911,
											"end": 933,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1160,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 970,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1068,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1052,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1050,
											"end": 1052,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1110,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1052,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1050,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1131,
											"end": 1154,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1160,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1165,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1165,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1274,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1291,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1353,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1246,
											"end": 1359,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1364,
											"end": 1567,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1364,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1567,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1572,
											"end": 1876,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1572,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1802,
											"end": 1817,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1817,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1817,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1869,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1870,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1876,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1881,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1881,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2139,
											"end": 2154,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2154,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2073,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2261,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2261,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2453,
											"end": 2485,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2485,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2485,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2535,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2540,
											"end": 2727,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2540,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2719,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2720,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2653,
											"end": 2671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2727,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2954,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2954,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3138,
											"end": 3159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3229,
											"end": 3231,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3291,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3298,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3303,
											"end": 3704,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3303,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "4465706F73697420616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 3578,
											"end": 3580,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3694,
											"end": 3697,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3679,
											"end": 3698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3704,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3709,
											"end": 4111,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3709,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3893,
											"end": 3914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 3952,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4023,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3969,
											"end": 3987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 3987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 4024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4086,
											"end": 4105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 4111,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4116,
											"end": 4455,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4116,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4318,
											"end": 4320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4300,
											"end": 4321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4321,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4391,
											"end": 4393,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4414,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4446,
											"end": 4448,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4460,
											"end": 4804,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4460,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4644,
											"end": 4665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4701,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4735,
											"end": 4737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4795,
											"end": 4797,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4780,
											"end": 4798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4780,
											"end": 4798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4804,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4809,
											"end": 5149,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4809,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5052,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5084,
											"end": 5086,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5142,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 5149,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5154,
											"end": 5510,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5154,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5429,
											"end": 5431,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5414,
											"end": 5432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5503,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5486,
											"end": 5504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5510,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5515,
											"end": 5868,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5515,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5699,
											"end": 5720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 5736,
											"end": 5754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5826,
											"name": "PUSH",
											"source": 1,
											"value": "4E6577206F776E657220697320746865207A65726F2061646472657373000000"
										},
										{
											"begin": 5790,
											"end": 5792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5844,
											"end": 5862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5868,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6277,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5873,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6057,
											"end": 6078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6116,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6094,
											"end": 6112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6153,
											"end": 6187,
											"name": "PUSH",
											"source": 1,
											"value": "5769746864726177616C20616D6F756E74206D75737420626520677265617465"
										},
										{
											"begin": 6148,
											"end": 6150,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72207468616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6219,
											"end": 6221,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6204,
											"end": 6222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6267,
											"end": 6270,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6252,
											"end": 6271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6277,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6282,
											"end": 6626,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6282,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6466,
											"end": 6487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6523,
											"end": 6525,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F75676820616C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6557,
											"end": 6559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6619,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6602,
											"end": 6620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6456,
											"end": 6626,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6631,
											"end": 6980,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6631,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 6835,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6815,
											"end": 6836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6815,
											"end": 6836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6815,
											"end": 6836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6874,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6852,
											"end": 6870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "45786365656473206D6178696D756D20616C6C6F77616E636500000000000000"
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6956,
											"end": 6974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6956,
											"end": 6974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6980,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6985,
											"end": 7335,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6985,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7169,
											"end": 7190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7228,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7265,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C6964207769746864726177616C2061646472657373000000000000"
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7245,
											"end": 7263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7328,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7311,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7335,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7340,
											"end": 7737,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 7340,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7542,
											"end": 7544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7524,
											"end": 7545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7583,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7620,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "5472616E7366657220746F204C697175696469747920506F6F6C206661696C65"
										},
										{
											"begin": 7615,
											"end": 7617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7686,
											"end": 7688,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7671,
											"end": 7689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7727,
											"end": 7730,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7712,
											"end": 7731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 7731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7737,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7742,
											"end": 8097,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7742,
											"end": 8097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 7947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7983,
											"end": 7985,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7956,
											"end": 7986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8055,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8017,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7995,
											"end": 8056,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8090,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8073,
											"end": 8091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 8097,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8102,
											"end": 8279,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 8102,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8273,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8221,
											"end": 8239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8279,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8284,
											"end": 8512,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 8284,
											"end": 8512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8284,
											"end": 8512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8352,
											"end": 8353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8354,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8345,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8343,
											"end": 8345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8377,
											"end": 8411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8377,
											"end": 8411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8434,
											"end": 8438,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8431,
											"end": 8432,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8424,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8384,
											"end": 8388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8345,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8343,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8497,
											"end": 8506,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8497,
											"end": 8506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8512,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approveContract(uint256)": "62c35c01",
							"automatedWithdrawalToPool()": "dee3b50f",
							"blockCounter()": "bb413c8d",
							"depositAndTransfer(uint256)": "c4da9247",
							"liquidityPoolAddress()": "d25b17b6",
							"maxAllowance()": "64f00f01",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setMaxAllowance(uint256)": "56d96a99",
							"transferInterval()": "4abb3fac",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"withdrawal(address,uint256)": "5a6b26ba",
							"wrappedToken()": "996c6cc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContractApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxAllowance\",\"type\":\"uint256\"}],\"name\":\"MaxAllowanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"automatedWithdrawalToPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxAllowance\",\"type\":\"uint256\"}],\"name\":\"setMaxAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/VestingLiquidityHedgey_flattened.sol\":\"LiquidityPoolInteractor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/VestingLiquidityHedgey_flattened.sol\":{\"keccak256\":\"0x1a046e1d3939f099c14505045120c76bc1e56aa0698217457ab59f696b69d3bb\",\"urls\":[\"bzz-raw://ba9a4e4f44026c76f014d3d1f15947156cfe7809c563caa3403bf9242d8c0f78\",\"dweb:/ipfs/QmfLZMND3zNdDSnnNEv8ULsteBjDepGArMgpPeFc6jUeKf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 197,
								"contract": "contract/VestingLiquidityHedgey_flattened.sol:LiquidityPoolInteractor",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 10,
								"contract": "contract/VestingLiquidityHedgey_flattened.sol:LiquidityPoolInteractor",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 101,
								"contract": "contract/VestingLiquidityHedgey_flattened.sol:LiquidityPoolInteractor",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 388,
								"contract": "contract/VestingLiquidityHedgey_flattened.sol:LiquidityPoolInteractor",
								"label": "liquidityPoolAddress",
								"offset": 1,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 391,
								"contract": "contract/VestingLiquidityHedgey_flattened.sol:LiquidityPoolInteractor",
								"label": "wrappedToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)379"
							},
							{
								"astId": 393,
								"contract": "contract/VestingLiquidityHedgey_flattened.sol:LiquidityPoolInteractor",
								"label": "blockCounter",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 396,
								"contract": "contract/VestingLiquidityHedgey_flattened.sol:LiquidityPoolInteractor",
								"label": "transferInterval",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 398,
								"contract": "contract/VestingLiquidityHedgey_flattened.sol:LiquidityPoolInteractor",
								"label": "maxAllowance",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)379": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/VestingLiquidityHedgey_flattened.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/VestingLiquidityHedgey_flattened.sol\":{\"keccak256\":\"0x1a046e1d3939f099c14505045120c76bc1e56aa0698217457ab59f696b69d3bb\",\"urls\":[\"bzz-raw://ba9a4e4f44026c76f014d3d1f15947156cfe7809c563caa3403bf9242d8c0f78\",\"dweb:/ipfs/QmfLZMND3zNdDSnnNEv8ULsteBjDepGArMgpPeFc6jUeKf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 197,
								"contract": "contract/VestingLiquidityHedgey_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/VestingLiquidityHedgey_flattened.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/VestingLiquidityHedgey_flattened.sol\":{\"keccak256\":\"0x1a046e1d3939f099c14505045120c76bc1e56aa0698217457ab59f696b69d3bb\",\"urls\":[\"bzz-raw://ba9a4e4f44026c76f014d3d1f15947156cfe7809c563caa3403bf9242d8c0f78\",\"dweb:/ipfs/QmfLZMND3zNdDSnnNEv8ULsteBjDepGArMgpPeFc6jUeKf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 101,
								"contract": "contract/VestingLiquidityHedgey_flattened.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/VestingLiquidityHedgey_flattened.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/VestingLiquidityHedgey_flattened.sol\":{\"keccak256\":\"0x1a046e1d3939f099c14505045120c76bc1e56aa0698217457ab59f696b69d3bb\",\"urls\":[\"bzz-raw://ba9a4e4f44026c76f014d3d1f15947156cfe7809c563caa3403bf9242d8c0f78\",\"dweb:/ipfs/QmfLZMND3zNdDSnnNEv8ULsteBjDepGArMgpPeFc6jUeKf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contract/VestingLiquidityHedgey_flattened.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contract/VestingLiquidityHedgey_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contract/VestingLiquidityHedgey_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contract/VestingLiquidityHedgey_flattened.sol": {
				"ast": {
					"absolutePath": "contract/VestingLiquidityHedgey_flattened.sol",
					"exportedSymbols": {
						"Context": [
							85
						],
						"IERC20": [
							379
						],
						"LiquidityPoolInteractor": [
							736
						],
						"Ownable": [
							302
						],
						"Pausable": [
							191
						],
						"ReentrancyGuard": [
							64
						]
					},
					"id": 737,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "198:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "223:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1762:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1762:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1802:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1809:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1809:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1845:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1853:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1853:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1897:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1907:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1917:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1907:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1907:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1897:0:0"
									},
									"scope": 64,
									"src": "1883:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2337:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2347:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2347:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2347:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2378:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2389:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2389:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2389:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1942:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2334:2:0"
									},
									"src": "2313:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2461:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2554:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2565:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2554:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2575:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2546:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2546:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2546:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2684:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2694:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2684:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2684:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2461:0:0"
									},
									"scope": 64,
									"src": "2422:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2753:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2895:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2905:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2895:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2895:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2742:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2753:0:0"
									},
									"scope": 64,
									"src": "2715:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3167:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3184:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3177:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2930:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3135:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3161:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3160:6:0"
									},
									"scope": 64,
									"src": "3103:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 737,
							"src": "974:2238:0"
						},
						{
							"id": 65,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3374:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 66,
								"nodeType": "StructuredDocumentation",
								"src": "3399:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 85,
							"linearizedBaseContracts": [
								85
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "3990:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 71,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4007:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4007:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 70,
												"id": 73,
												"nodeType": "Return",
												"src": "4000:17:0"
											}
										]
									},
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3947:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "3981:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:9:0"
									},
									"scope": 85,
									"src": "3928:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "4097:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 80,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4114:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4114:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 79,
												"id": 82,
												"nodeType": "Return",
												"src": "4107:15:0"
											}
										]
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4047:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "4081:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4081:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4080:16:0"
									},
									"scope": 85,
									"src": "4030:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 737,
							"src": "3896:235:0"
						},
						{
							"id": 86,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4316:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 88,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 85,
										"src": "4812:7:0"
									},
									"id": 89,
									"nodeType": "InheritanceSpecifier",
									"src": "4812:7:0"
								}
							],
							"contractDependencies": [
								85
							],
							"contractKind": "contract",
							"documentation": {
								"id": 87,
								"nodeType": "StructuredDocumentation",
								"src": "4342:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								85
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "4826:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 94,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "4917:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:17:0"
									},
									"src": "4904:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "4940:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 99,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "5030:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5029:17:0"
									},
									"src": "5015:32:0"
								},
								{
									"constant": false,
									"id": 101,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "5053:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 100,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "5053:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "5166:32:0",
										"statements": [
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 105,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "5176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5186:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5176:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "5176:15:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "5080:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 110,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5163:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5166:0:0"
									},
									"scope": 191,
									"src": "5152:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "5409:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 113,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "5419:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5419:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "5419:19:0"
											},
											{
												"id": 116,
												"nodeType": "PlaceholderStatement",
												"src": "5448:1:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "5204:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 118,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5406:2:0"
									},
									"src": "5384:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "5656:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 121,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5666:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5666:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "5666:16:0"
											},
											{
												"id": 124,
												"nodeType": "PlaceholderStatement",
												"src": "5692:1:0"
											}
										]
									},
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5462:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 126,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5653:2:0"
									},
									"src": "5634:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "5848:31:0",
										"statements": [
											{
												"expression": {
													"id": 132,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 101,
													"src": "5865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 131,
												"id": 133,
												"nodeType": "Return",
												"src": "5858:14:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "5706:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5810:2:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5842:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5842:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5841:6:0"
									},
									"scope": 191,
									"src": "5795:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "5998:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6016:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 140,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "6017:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6017:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6027:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6008:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6008:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "6008:38:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "5885:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5973:2:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5998:0:0"
									},
									"scope": 191,
									"src": "5947:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "6173:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 152,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "6191:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6191:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6183:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "6183:41:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "6059:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6148:2:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6173:0:0"
									},
									"scope": 191,
									"src": "6125:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "6415:66:0",
										"statements": [
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "6425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6435:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6425:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "6425:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 169,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "6461:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6461:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 168,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "6454:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6454:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "EmitStatement",
												"src": "6449:25:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "6237:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 162,
											"modifierName": {
												"id": 161,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "6401:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6401:13:0"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6381:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6415:0:0"
									},
									"scope": 191,
									"src": "6366:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "6661:69:0",
										"statements": [
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "6671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6671:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "6671:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 185,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "6710:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6710:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "6701:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6701:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "EmitStatement",
												"src": "6696:27:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "6487:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 178,
											"modifierName": {
												"id": 177,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 126,
												"src": "6650:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6650:10:0"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6630:2:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6661:0:0"
									},
									"scope": 191,
									"src": "6613:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 737,
							"src": "4782:1950:0"
						},
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6911:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 194,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 85,
										"src": "7461:7:0"
									},
									"id": 195,
									"nodeType": "InheritanceSpecifier",
									"src": "7461:7:0"
								}
							],
							"contractDependencies": [
								85
							],
							"contractKind": "contract",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "6937:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302,
								85
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 197,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "7475:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 196,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7475:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 203,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "7531:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "7562:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7530:57:0"
									},
									"src": "7504:84:0"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "7704:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 208,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "7733:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7733:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "7714:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7714:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "7714:32:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "7594:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 213,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7701:2:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7704:0:0"
									},
									"scope": 302,
									"src": "7690:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7862:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 216,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "7872:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7872:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "7872:13:0"
											},
											{
												"id": 219,
												"nodeType": "PlaceholderStatement",
												"src": "7895:1:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "7759:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 221,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7859:2:0"
									},
									"src": "7841:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "8034:30:0",
										"statements": [
											{
												"expression": {
													"id": 227,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 197,
													"src": "8051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 226,
												"id": 228,
												"nodeType": "Return",
												"src": "8044:13:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "7909:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7993:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "8025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8024:9:0"
									},
									"scope": 302,
									"src": "7979:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "8182:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 235,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "8200:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8200:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 237,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "8211:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8211:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8200:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8225:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "8192:68:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "8070:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8157:2:0"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8182:0:0"
									},
									"scope": 302,
									"src": "8137:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "8656:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8693:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8685:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 251,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8685:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8685:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 250,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "8666:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8666:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "8666:30:0"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "8273:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 248,
											"modifierName": {
												"id": 247,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 221,
												"src": "8646:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8646:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8628:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8656:0:0"
									},
									"scope": 302,
									"src": "8602:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "8922:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 267,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "8940:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8960:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8952:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 268,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8952:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8952:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8940:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8964:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8932:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "8932:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "9034:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 276,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "9015:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9015:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "9015:28:0"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "8709:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 264,
											"modifierName": {
												"id": 263,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 221,
												"src": "8912:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8912:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "8879:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8878:18:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8922:0:0"
									},
									"scope": 302,
									"src": "8852:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "9267:124:0",
										"statements": [
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "9277:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 287,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9277:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 290,
												"initialValue": {
													"id": 289,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 197,
													"src": "9296:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9277:25:0"
											},
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 291,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "9312:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 292,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "9321:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9312:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "9312:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 296,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "9365:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "9375:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "9344:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9344:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "EmitStatement",
												"src": "9339:45:0"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "9056:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "9232:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9231:18:0"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9267:0:0"
									},
									"scope": 302,
									"src": "9204:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 737,
							"src": "7432:1961:0"
						},
						{
							"id": 303,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "9580:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 304,
								"nodeType": "StructuredDocumentation",
								"src": "9605:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "9699:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 313,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "9877:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "9899:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "9919:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9876:57:0"
									},
									"src": "9862:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "9940:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 322,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "10108:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "10131:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "10156:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10107:63:0"
									},
									"src": "10093:78:0"
								},
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "10177:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10268:2:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "10294:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10293:9:0"
									},
									"scope": 379,
									"src": "10248:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "10309:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10405:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10404:17:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10445:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10444:9:0"
									},
									"scope": 379,
									"src": "10386:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "10460:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10685:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10697:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10684:28:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "10731:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10731:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10730:6:0"
									},
									"scope": 379,
									"src": "10667:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "10743:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "11031:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "11046:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11030:32:0"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "11086:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11085:9:0"
									},
									"scope": 379,
									"src": "11012:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "11101:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "11765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "11782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11764:33:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "11816:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11816:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11815:6:0"
									},
									"scope": 379,
									"src": "11748:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "11828:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12142:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12156:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12168:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12141:42:0"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12202:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12202:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12201:6:0"
									},
									"scope": 379,
									"src": "12120:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 737,
							"src": "9676:2534:0"
						},
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12259:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 381,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "12324:7:0"
									},
									"id": 382,
									"nodeType": "InheritanceSpecifier",
									"src": "12324:7:0"
								},
								{
									"baseName": {
										"id": 383,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "12333:15:0"
									},
									"id": 384,
									"nodeType": "InheritanceSpecifier",
									"src": "12333:15:0"
								},
								{
									"baseName": {
										"id": 385,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 191,
										"src": "12350:8:0"
									},
									"id": 386,
									"nodeType": "InheritanceSpecifier",
									"src": "12350:8:0"
								}
							],
							"contractDependencies": [
								64,
								85,
								191,
								302
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 736,
							"linearizedBaseContracts": [
								736,
								191,
								64,
								302,
								85
							],
							"name": "LiquidityPoolInteractor",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d25b17b6",
									"id": 388,
									"mutability": "mutable",
									"name": "liquidityPoolAddress",
									"nodeType": "VariableDeclaration",
									"scope": 736,
									"src": "12365:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 387,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "12365:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "996c6cc3",
									"id": 391,
									"mutability": "mutable",
									"name": "wrappedToken",
									"nodeType": "VariableDeclaration",
									"scope": 736,
									"src": "12406:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$379",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 390,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 389,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 379,
											"src": "12406:6:0"
										},
										"referencedDeclaration": 379,
										"src": "12406:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$379",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bb413c8d",
									"id": 393,
									"mutability": "mutable",
									"name": "blockCounter",
									"nodeType": "VariableDeclaration",
									"scope": 736,
									"src": "12439:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 392,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12439:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4abb3fac",
									"id": 396,
									"mutability": "mutable",
									"name": "transferInterval",
									"nodeType": "VariableDeclaration",
									"scope": 736,
									"src": "12472:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 394,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12472:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 395,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12506:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64f00f01",
									"id": 398,
									"mutability": "mutable",
									"name": "maxAllowance",
									"nodeType": "VariableDeclaration",
									"scope": 736,
									"src": "12515:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 397,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12515:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 404,
									"name": "TokensDeposited",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "12571:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "12593:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12570:38:0"
									},
									"src": "12549:60:0"
								},
								{
									"anonymous": false,
									"id": 410,
									"name": "ContractApproved",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "12637:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "12661:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12636:40:0"
									},
									"src": "12614:63:0"
								},
								{
									"anonymous": false,
									"id": 416,
									"name": "TokensWithdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "12704:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "12724:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12703:36:0"
									},
									"src": "12682:58:0"
								},
								{
									"anonymous": false,
									"id": 420,
									"name": "MaxAllowanceChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxAllowance",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "12771:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12770:25:0"
									},
									"src": "12745:51:0"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "12891:391:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 430,
																"name": "_liquidityPoolAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "12909:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12934:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 431,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12934:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12934:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12909:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c697175696469747920506f6f6c2061646472657373",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12946:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bec7f155b27be5ed5d4c4aac32703590004616202359f331ff690d39acf70e3e",
																"typeString": "literal_string \"Invalid Liquidity Pool address\""
															},
															"value": "Invalid Liquidity Pool address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bec7f155b27be5ed5d4c4aac32703590004616202359f331ff690d39acf70e3e",
																"typeString": "literal_string \"Invalid Liquidity Pool address\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12901:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "12901:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 440,
																"name": "_wrappedToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "12997:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13022:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13014:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 441,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13014:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13014:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12997:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207772617070656420746f6b656e2061646472657373",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13026:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8da99c5de746951b80724325f566899425dfe8ad65df383979ced2a73887a62",
																"typeString": "literal_string \"Invalid wrapped token address\""
															},
															"value": "Invalid wrapped token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8da99c5de746951b80724325f566899425dfe8ad65df383979ced2a73887a62",
																"typeString": "literal_string \"Invalid wrapped token address\""
															}
														],
														"id": 439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12989:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "12989:69:0"
											},
											{
												"expression": {
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 449,
														"name": "liquidityPoolAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "13069:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 450,
														"name": "_liquidityPoolAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "13092:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13069:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "13069:44:0"
											},
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 453,
														"name": "wrappedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "13123:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$379",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 455,
																"name": "_wrappedToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "13145:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 454,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "13138:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$379_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13138:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$379",
															"typeString": "contract IERC20"
														}
													},
													"src": "13123:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$379",
														"typeString": "contract IERC20"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "13123:36:0"
											},
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 459,
														"name": "maxAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "13169:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 460,
														"name": "_maxAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "13184:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13169:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "13169:28:0"
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 463,
														"name": "blockCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "13248:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 464,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "13263:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "13263:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13248:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "13248:27:0"
											}
										]
									},
									"id": 469,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "_liquidityPoolAddress",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "12814:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "_wrappedToken",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "12845:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "_maxAllowance",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "12868:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:77:0"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12891:0:0"
									},
									"scope": 736,
									"src": "12802:480:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "13355:768:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "13373:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13382:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13373:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13385:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6",
																"typeString": "literal_string \"Deposit amount must be greater than 0\""
															},
															"value": "Deposit amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6",
																"typeString": "literal_string \"Deposit amount must be greater than 0\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13365:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13365:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "13365:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 486,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13553:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13553:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 490,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "13573:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LiquidityPoolInteractor_$736",
																					"typeString": "contract LiquidityPoolInteractor"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LiquidityPoolInteractor_$736",
																					"typeString": "contract LiquidityPoolInteractor"
																				}
																			],
																			"id": 489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13565:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 488,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13565:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13565:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 484,
																		"name": "wrappedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "13530:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$379",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 356,
																	"src": "13530:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13530:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 493,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "13583:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13530:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820616c6c6f77616e6365",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13591:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc",
																"typeString": "literal_string \"Not enough allowance\""
															},
															"value": "Not enough allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc",
																"typeString": "literal_string \"Not enough allowance\""
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13522:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "13522:92:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 501,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "13715:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "13715:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 505,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "13735:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LiquidityPoolInteractor_$736",
																				"typeString": "contract LiquidityPoolInteractor"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LiquidityPoolInteractor_$736",
																				"typeString": "contract LiquidityPoolInteractor"
																			}
																		],
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13727:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 503,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "13727:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13727:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 507,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "13742:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 499,
																	"name": "wrappedToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "13689:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$379",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 378,
																"src": "13689:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13689:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13751:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13681:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13681:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "13681:88:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 512,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "13880:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "13880:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 514,
															"name": "blockCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "13895:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13880:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 516,
														"name": "transferInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "13911:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13880:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 527,
												"nodeType": "IfStatement",
												"src": "13876:190:0",
												"trueBody": {
													"id": 526,
													"nodeType": "Block",
													"src": "13929:137:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 518,
																	"name": "executeTransferToLiquidityPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "13943:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13943:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "13943:32:0"
														},
														{
															"expression": {
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 521,
																	"name": "blockCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "14028:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 522,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "14043:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "14043:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14028:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 525,
															"nodeType": "ExpressionStatement",
															"src": "14028:27:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 529,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14097:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14097:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "14109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "TokensDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "14081:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14081:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "EmitStatement",
												"src": "14076:40:0"
											}
										]
									},
									"functionSelector": "c4da9247",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 474,
											"modifierName": {
												"id": 473,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "13341:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13341:13:0"
										}
									],
									"name": "depositAndTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "13316:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13315:16:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13355:0:0"
									},
									"scope": 736,
									"src": "13288:835:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "14203:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 545,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "14294:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 546,
																"name": "maxAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "14304:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14294:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d6178696d756d20616c6c6f77616e6365",
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14318:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b920763e9c4fc25107c5d08e4f48dc2f6cd7a3bd17287c9494a893e22774edba",
																"typeString": "literal_string \"Exceeds maximum allowance\""
															},
															"value": "Exceeds maximum allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b920763e9c4fc25107c5d08e4f48dc2f6cd7a3bd17287c9494a893e22774edba",
																"typeString": "literal_string \"Exceeds maximum allowance\""
															}
														],
														"id": 544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14286:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14286:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "14286:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 556,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "14385:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPoolInteractor_$736",
																		"typeString": "contract LiquidityPoolInteractor"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPoolInteractor_$736",
																		"typeString": "contract LiquidityPoolInteractor"
																	}
																],
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14377:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 554,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14377:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14377:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "14392:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 551,
															"name": "wrappedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "14356:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$379",
																"typeString": "contract IERC20"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 366,
														"src": "14356:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14356:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "14356:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 562,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14432:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14432:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "14444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 561,
														"name": "ContractApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "14415:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14415:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "EmitStatement",
												"src": "14410:41:0"
											}
										]
									},
									"functionSelector": "62c35c01",
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 540,
											"modifierName": {
												"id": 539,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 221,
												"src": "14179:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14179:9:0"
										},
										{
											"id": 542,
											"modifierName": {
												"id": 541,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "14189:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14189:13:0"
										}
									],
									"name": "approveContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "14154:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14153:16:0"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14203:0:0"
									},
									"scope": 736,
									"src": "14129:329:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "14558:420:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 582,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "14576:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14590:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14582:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 583,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14582:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14582:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14576:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207769746864726177616c2061646472657373",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14594:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfedf5f110596e524ef98520d82fcd7477f7355fb570fb0b7b31726b2b437dcb",
																"typeString": "literal_string \"Invalid withdrawal address\""
															},
															"value": "Invalid withdrawal address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfedf5f110596e524ef98520d82fcd7477f7355fb570fb0b7b31726b2b437dcb",
																"typeString": "literal_string \"Invalid withdrawal address\""
															}
														],
														"id": 581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14568:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14568:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "14568:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 592,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "14641:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14650:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14641:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14653:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2bb57ccc52aba6a10ce9e730f975161407a749f2470540e34f0d522d5352045",
																"typeString": "literal_string \"Withdrawal amount must be greater than 0\""
															},
															"value": "Withdrawal amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2bb57ccc52aba6a10ce9e730f975161407a749f2470540e34f0d522d5352045",
																"typeString": "literal_string \"Withdrawal amount must be greater than 0\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14633:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14633:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "14633:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 603,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "14745:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LiquidityPoolInteractor_$736",
																					"typeString": "contract LiquidityPoolInteractor"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LiquidityPoolInteractor_$736",
																					"typeString": "contract LiquidityPoolInteractor"
																				}
																			],
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14737:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 601,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14737:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14737:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 599,
																		"name": "wrappedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "14714:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$379",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 336,
																	"src": "14714:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14714:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 606,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "14755:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14714:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14763:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14706:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "14706:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 614,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "14897:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 615,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "14901:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 612,
																	"name": "wrappedToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "14875:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$379",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 346,
																"src": "14875:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14875:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14910:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14867:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14867:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "14867:61:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 621,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "14960:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "14964:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "TokensWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "14944:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14944:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "EmitStatement",
												"src": "14939:32:0"
											}
										]
									},
									"functionSelector": "5a6b26ba",
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 575,
											"modifierName": {
												"id": 574,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 221,
												"src": "14521:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14521:9:0"
										},
										{
											"id": 577,
											"modifierName": {
												"id": 576,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "14531:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14531:12:0"
										},
										{
											"id": 579,
											"modifierName": {
												"id": 578,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "14544:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14544:13:0"
										}
									],
									"name": "withdrawal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "14484:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "14496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14483:28:0"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14558:0:0"
									},
									"scope": 736,
									"src": "14464:514:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										281
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "15055:124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 635,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "15073:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15093:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15085:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 636,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15085:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15085:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15073:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15097:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940",
																"typeString": "literal_string \"New owner is the zero address\""
															},
															"value": "New owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940",
																"typeString": "literal_string \"New owner is the zero address\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15065:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "15065:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "15163:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 644,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "15139:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_LiquidityPoolInteractor_$736_$",
																"typeString": "type(contract super LiquidityPoolInteractor)"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 281,
														"src": "15139:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15139:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "15139:33:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 632,
											"modifierName": {
												"id": 631,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 221,
												"src": "15045:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15045:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 630,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15036:8:0"
									},
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15011:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15010:18:0"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15055:0:0"
									},
									"scope": 736,
									"src": "14984:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "15221:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 656,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "15231:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15231:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "15231:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"modifierName": {
												"id": 653,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 221,
												"src": "15211:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15211:9:0"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15199:2:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15221:0:0"
									},
									"scope": 736,
									"src": "15185:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "15290:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 665,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "15300:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15300:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "15300:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 663,
											"modifierName": {
												"id": 662,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 221,
												"src": "15280:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15280:9:0"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15268:2:0"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15290:0:0"
									},
									"scope": 736,
									"src": "15252:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "15383:302:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 674,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "15493:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "15493:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 676,
															"name": "blockCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "15508:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "15493:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 678,
														"name": "transferInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "15524:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15493:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "IfStatement",
												"src": "15489:190:0",
												"trueBody": {
													"id": 688,
													"nodeType": "Block",
													"src": "15542:137:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 680,
																	"name": "executeTransferToLiquidityPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "15556:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15556:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 682,
															"nodeType": "ExpressionStatement",
															"src": "15556:32:0"
														},
														{
															"expression": {
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 683,
																	"name": "blockCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "15641:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 684,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "15656:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "15656:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15641:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 687,
															"nodeType": "ExpressionStatement",
															"src": "15641:27:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "dee3b50f",
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 672,
											"modifierName": {
												"id": 671,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 118,
												"src": "15369:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15369:13:0"
										}
									],
									"name": "automatedWithdrawalToPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15357:2:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15383:0:0"
									},
									"scope": 736,
									"src": "15323:362:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "15813:327:0",
										"statements": [
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "contractBalance",
														"nodeType": "VariableDeclaration",
														"scope": 718,
														"src": "15905:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 703,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 700,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "15962:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPoolInteractor_$736",
																		"typeString": "contract LiquidityPoolInteractor"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPoolInteractor_$736",
																		"typeString": "contract LiquidityPoolInteractor"
																	}
																],
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15954:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 698,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15954:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15954:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 696,
															"name": "wrappedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "15931:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$379",
																"typeString": "contract IERC20"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "15931:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15931:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15905:63:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "15982:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16000:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15982:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 717,
												"nodeType": "IfStatement",
												"src": "15978:156:0",
												"trueBody": {
													"id": 716,
													"nodeType": "Block",
													"src": "16003:131:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 710,
																				"name": "liquidityPoolAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "16047:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 711,
																				"name": "contractBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 695,
																				"src": "16069:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 708,
																				"name": "wrappedToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 391,
																				"src": "16025:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$379",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 346,
																			"src": "16025:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16025:60:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657220746f204c697175696469747920506f6f6c206661696c6564",
																		"id": 713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16087:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dd554f9385562280007386b29c790fe9fc7c44731c54e129e1cb06725e34fe0b",
																			"typeString": "literal_string \"Transfer to Liquidity Pool failed\""
																		},
																		"value": "Transfer to Liquidity Pool failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dd554f9385562280007386b29c790fe9fc7c44731c54e129e1cb06725e34fe0b",
																			"typeString": "literal_string \"Transfer to Liquidity Pool failed\""
																		}
																	],
																	"id": 707,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "16017:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16017:106:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 715,
															"nodeType": "ExpressionStatement",
															"src": "16017:106:0"
														}
													]
												}
											}
										]
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeTransferToLiquidityPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15801:2:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15813:0:0"
									},
									"scope": 736,
									"src": "15762:378:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "16215:98:0",
										"statements": [
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "maxAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "16225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 727,
														"name": "newMaxAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "16240:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16225:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "16225:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 731,
															"name": "newMaxAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "16290:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "MaxAllowanceChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "16270:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16270:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "EmitStatement",
												"src": "16265:41:0"
											}
										]
									},
									"functionSelector": "56d96a99",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 724,
											"modifierName": {
												"id": 723,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 221,
												"src": "16205:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16205:9:0"
										}
									],
									"name": "setMaxAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "newMaxAllowance",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "16171:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16170:25:0"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16215:0:0"
									},
									"scope": 736,
									"src": "16146:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 737,
							"src": "12288:4027:0"
						}
					],
					"src": "198:16118:0"
				},
				"id": 0
			}
		}
	}
}